Search.setIndex({"docnames": ["index", "module_docs/i2", "module_docs/i2/_deprecated", "module_docs/i2/base", "module_docs/i2/chain_map", "module_docs/i2/deco", "module_docs/i2/doc_mint", "module_docs/i2/errors", "module_docs/i2/examples", "module_docs/i2/examples/signature_calculus", "module_docs/i2/footprints", "module_docs/i2/io_trans", "module_docs/i2/itypes", "module_docs/i2/key_path", "module_docs/i2/multi_object", "module_docs/i2/routing_forest", "module_docs/i2/scrap", "module_docs/i2/scrap/scrap", "module_docs/i2/scrap/scrap_ch_variadics", "module_docs/i2/scrap/scrap_kwargs", "module_docs/i2/scrap/signature_bops", "module_docs/i2/scrap/simple_pymint", "module_docs/i2/scrap/switch_case_tree", "module_docs/i2/signatures", "module_docs/i2/switch_case_tree", "module_docs/i2/tests", "module_docs/i2/tests/footprints_test", "module_docs/i2/tests/objects_for_testing", "module_docs/i2/tests/signatures_test", "module_docs/i2/tests/test_util", "module_docs/i2/tests/test_wrapper", "module_docs/i2/tests/util", "module_docs/i2/tests/wrapper_test", "module_docs/i2/util", "module_docs/i2/wrapper", "table_of_contents"], "filenames": ["index.rst", "module_docs/i2.rst", "module_docs/i2/_deprecated.rst", "module_docs/i2/base.rst", "module_docs/i2/chain_map.rst", "module_docs/i2/deco.rst", "module_docs/i2/doc_mint.rst", "module_docs/i2/errors.rst", "module_docs/i2/examples.rst", "module_docs/i2/examples/signature_calculus.rst", "module_docs/i2/footprints.rst", "module_docs/i2/io_trans.rst", "module_docs/i2/itypes.rst", "module_docs/i2/key_path.rst", "module_docs/i2/multi_object.rst", "module_docs/i2/routing_forest.rst", "module_docs/i2/scrap.rst", "module_docs/i2/scrap/scrap.rst", "module_docs/i2/scrap/scrap_ch_variadics.rst", "module_docs/i2/scrap/scrap_kwargs.rst", "module_docs/i2/scrap/signature_bops.rst", "module_docs/i2/scrap/simple_pymint.rst", "module_docs/i2/scrap/switch_case_tree.rst", "module_docs/i2/signatures.rst", "module_docs/i2/switch_case_tree.rst", "module_docs/i2/tests.rst", "module_docs/i2/tests/footprints_test.rst", "module_docs/i2/tests/objects_for_testing.rst", "module_docs/i2/tests/signatures_test.rst", "module_docs/i2/tests/test_util.rst", "module_docs/i2/tests/test_wrapper.rst", "module_docs/i2/tests/util.rst", "module_docs/i2/tests/wrapper_test.rst", "module_docs/i2/util.rst", "module_docs/i2/wrapper.rst", "table_of_contents.rst"], "titles": ["Welcome to i2\u2019s documentation!", "i2", "i2._deprecated", "i2.base", "i2.chain_map", "i2.deco", "i2.doc_mint", "i2.errors", "i2.examples", "i2.examples.signature_calculus", "i2.footprints", "i2.io_trans", "i2.itypes", "i2.key_path", "i2.multi_object", "i2.routing_forest", "i2.scrap", "i2.scrap.scrap", "i2.scrap.scrap_ch_variadics", "i2.scrap.scrap_kwargs", "i2.scrap.signature_bops", "i2.scrap.simple_pymint", "i2.scrap.switch_case_tree", "i2.signatures", "i2.switch_case_tree", "i2.tests", "i2.tests.footprints_test", "i2.tests.objects_for_testing", "i2.tests.signatures_test", "i2.tests.test_util", "i2.tests.test_wrapper", "i2.tests.util", "i2.tests.wrapper_test", "i2.util", "i2.wrapper", "&lt;no title&gt;"], "terms": {"_deprec": [0, 35], "command": [0, 2, 7, 34, 35], "commands_dict": [0, 2, 35], "extract_command": [0, 2, 35], "base": [0, 4, 5, 14, 23, 31, 33, 34, 35], "mint": [0, 3, 21, 35], "mintofcal": [0, 3, 35], "parametersmint": [0, 3, 35], "chain_map": [0, 35], "chainmaptre": [0, 4, 35], "is_iter": [0, 4, 35], "unique_it": [0, 4, 35], "deco": [0, 35], "funcfactori": [0, 5, 35], "outputpostprocessingerror": [0, 5, 35], "add_method": [0, 5, 35], "assert_attr": [0, 5, 35], "double_up_as_factori": [0, 5, 35], "ensure_iterable_arg": [0, 5, 35], "get_callable_from_factory_if_no_argu": [0, 5, 35], "input_output_decor": [0, 5, 35], "kwargs_for_func": [0, 5, 14, 35], "mk_args_kwargs_merg": [0, 5, 35], "mk_call_logg": [0, 5, 35], "mk_method_trans_spec_from_methods_specs_dict": [0, 5, 35], "postprocess": [0, 5, 35], "preprocess_argu": [0, 5, 35], "transform_arg": [0, 5, 35], "wrap_class_method": [0, 5, 35], "wrap_class_methods_input_and_output": [0, 5, 35], "doc_mint": [0, 35], "doctestblock": [0, 6, 35], "examplex": [0, 6, 35], "doctest_str": [0, 6, 35], "doctest_string_print": [0, 6, 35], "non_doctest_lin": [0, 6, 35], "old_doctest_str": [0, 6, 35], "split_text_and_doctest": [0, 6, 35], "error": [0, 23, 33, 34, 35], "authorizationerror": [0, 7, 35], "dataerror": [0, 7, 35], "duplicaterecorderror": [0, 7, 35], "forbiddenerror": [0, 7, 35], "handleexcept": [0, 7, 35], "inputerror": [0, 7, 35], "interruptwithblock": [0, 7, 35], "modulenotfoundignor": [0, 7, 35], "notfounderror": [0, 7, 35], "overwritesnotallow": [0, 7, 34, 35], "exampl": [0, 5, 6, 7, 10, 13, 14, 15, 23, 31, 33, 34, 35], "signature_calculu": [0, 35], "footprint": [0, 35], "import": [0, 3, 5, 6, 7, 9, 10, 12, 13, 14, 15, 17, 21, 22, 23, 31, 33, 34, 35], "methodtrac": [0, 10, 35], "tracker": [0, 10, 35], "attr_list": [0, 10, 35], "attrs_used_by_method": [0, 10, 35], "attrs_used_by_method_comput": [0, 10, 35], "dict_to_graph": [0, 10, 35], "get_class_that_defined_method": [0, 10, 35], "get_imports_from_obj": [0, 10, 35], "get_sourc": [0, 10, 35], "list_func_cal": [0, 10, 35], "start_track": [0, 10, 35], "trace_class_decor": [0, 10, 35], "io_tran": [0, 35], "annotanddfltiotran": [0, 11, 35], "argnameiotran": [0, 11, 35], "iotran": [0, 11, 35], "jsonannotanddfltiotran": [0, 11, 35], "typedbasedoutiotran": [0, 11, 35], "cast_to_jdict": [0, 11, 35], "cast_to_list": [0, 11, 35], "ityp": [0, 35], "hasattr": [0, 12, 14, 31, 33, 35], "input_and_output_typ": [0, 12, 35], "is_callable_kind": [0, 12, 35], "iterable_to_liter": [0, 12, 35], "new_typ": [0, 12, 35], "validate_liter": [0, 12, 35], "key_path": [0, 35], "keypathmap": [0, 13, 35], "keypathtran": [0, 13, 35], "strkeypath": [0, 13, 35], "flatten_dict": [0, 13, 35], "obj_to_str_path": [0, 13, 35], "rollout_dict": [0, 13, 35], "str_path_to_obj": [0, 13, 35], "multi_object": [0, 35], "contextfanout": [0, 14, 35], "flexfuncfanout": [0, 14, 35], "funcfanout": [0, 14, 35], "multifunc": [0, 14, 35], "multiobj": [0, 14, 35], "parallelfunc": [0, 14, 35], "pipe": [0, 14, 34, 35], "ensure_iterable_of_cal": [0, 14, 35], "flatten_pip": [0, 14, 35], "merge_unnamed_and_nam": [0, 14, 35], "name_of_obj": [0, 13, 14, 23, 35], "pipes_are_equ": [0, 14, 35], "uniquely_named_object": [0, 14, 35], "routing_forest": [0, 35], "condnod": [0, 15, 35], "delegatetomappingattrmixin": [0, 15, 35], "featcondnod": [0, 15, 35], "finalnod": [0, 15, 35], "keyfuncmap": [0, 15, 35], "routingforest": [0, 15, 35], "routingnod": [0, 15, 35], "switchcasenod": [0, 15, 35], "return_sentinel": [0, 15, 35], "scrap": [0, 35], "wrapx1": [0, 17, 35], "wrapx2": [0, 17, 35], "default_cal": [0, 17, 35], "scrap_ch_variad": [0, 35], "scrap_kwarg": [0, 35], "signature_bop": [0, 35], "keyed_compar": [0, 20, 23, 35], "simple_pymint": [0, 35], "mint_of_cal": [0, 21, 35], "switch_case_tre": [0, 35], "attrmap": [0, 22, 35], "signatur": [0, 2, 3, 5, 9, 11, 13, 14, 17, 20, 27, 31, 33, 34, 35], "funccallnotmatchingsignatur": [0, 23, 35], "incompatiblesignatur": [0, 23, 35], "missingargvalfor": [0, 23, 35], "p": [0, 9, 23, 35], "param": [0, 3, 5, 6, 10, 13, 15, 21, 23, 31, 34, 35], "sig": [0, 2, 9, 10, 14, 23, 31, 34, 35], "all_pk_signatur": [0, 23, 35], "assure_param": [0, 23, 35], "call_forgivingli": [0, 23, 35], "call_somewhat_forgivingli": [0, 23, 35], "ch_func_to_all_pk": [0, 23, 35], "ch_signature_to_all_pk": [0, 23, 35], "ch_variadics_to_non_variadic_kind": [0, 23, 35], "common_and_diff_argnam": [0, 23, 35], "copy_func": [0, 23, 33, 35], "dict_of_attribute_signatur": [0, 23, 35], "ensure_param": [0, 23, 31, 35], "extract_argu": [0, 23, 35], "extract_arguments_asserting_no_remaind": [0, 23, 35], "extract_arguments_ignoring_remaind": [0, 23, 35], "has_signatur": [0, 23, 35], "insert_annot": [0, 23, 35], "is_call_compatible_with": [0, 23, 35], "is_param_compatible_with": [0, 23, 35], "kind_forgiving_func": [0, 23, 35], "mk_sig_from_arg": [0, 23, 35], "param_binary_func": [0, 23, 35], "param_compar": [0, 23, 35], "param_for_kind": [0, 23, 35], "resolve_funct": [0, 23, 35], "set_signature_of_func": [0, 23, 35], "sig_to_dataclass": [0, 23, 35], "sort_param": [0, 23, 35], "tuple_the_arg": [0, 23, 35], "use_interfac": [0, 23, 35], "test": [0, 5, 6, 10, 14, 23, 33, 34, 35], "footprints_test": [0, 10, 35], "objects_for_test": [0, 5, 14, 35], "add": [0, 2, 5, 10, 12, 13, 14, 17, 23, 27, 33, 34, 35], "f": [0, 2, 3, 5, 10, 12, 14, 15, 21, 23, 27, 31, 33, 34, 35], "formula1": [0, 2, 5, 9, 14, 27, 35], "formula2": [0, 27, 35], "sum_of_arg": [0, 5, 14, 27, 35], "test_func_1": [0, 27, 35], "test_func_2": [0, 27, 35], "signatures_test": [0, 35], "test_util": [0, 35], "test_wrapp": [0, 35], "simple_chunk": [0, 30, 35], "util": [0, 5, 14, 29, 35], "builtin_signatureless_cal": [0, 31, 35], "function_is_compatible_with_signatur": [0, 31, 35], "generate_param": [0, 31, 35], "inject_default": [0, 31, 35], "mk_func_from_param": [0, 31, 35], "params_to_arg_name_and_v": [0, 31, 35], "sig_to_func": [0, 31, 35], "sig_to_input": [0, 31, 35], "existingargu": [0, 33, 35], "filelikeobject": [0, 33, 35], "frozendict": [0, 3, 33, 35], "frozenhasherror": [0, 33, 35], "functionbuild": [0, 33, 35], "literalv": [0, 33, 35], "missingargu": [0, 33, 35], "namespac": [0, 33, 35], "overwritesforbidden": [0, 33, 35], "picklablelambda": [0, 33, 35], "dp_get": [0, 33, 35], "ensure_identifi": [0, 33, 35], "get_app_data_fold": [0, 33, 35], "imdict": [0, 33, 35], "inject_method": [0, 33, 35], "insert_name_based_objects_in_scop": [0, 33, 35], "inspect_formatargspec": [0, 33, 35], "lambda_cod": [0, 33, 35], "lazyprop": [0, 33, 35], "mk_sentinel": [0, 33, 35], "path_extractor": [0, 33, 35], "wrapper": [0, 5, 23, 30, 35], "callervalidationerror": [0, 34, 35], "egressvalidationerror": [0, 34, 35], "ingress": [0, 17, 34, 35], "ingressvalidationerror": [0, 34, 35], "innermapingress": [0, 34, 35], "makefromfunc": [0, 34, 35], "smartdefault": [0, 34, 35], "wrap": [0, 5, 11, 12, 13, 14, 15, 17, 23, 33, 34, 35], "wrappervalidationerror": [0, 34, 35], "wrapx": [0, 34, 35], "append_empty_arg": [0, 34, 35], "bind_funcs_object_attr": [0, 34, 35], "bind_funcs_object_attrs_old": [0, 34, 35], "camel": [0, 34, 35], "complete_dict_applying_funct": [0, 34, 35], "func_to_method_func": [0, 34, 35], "ident": [0, 4, 5, 14, 15, 23, 34, 35], "include_exclude_ingress_factori": [0, 34, 35], "items_with_mapped_kei": [0, 34, 35], "kwargs_tran": [0, 34, 35], "move_names_to_the_end": [0, 34, 35], "move_params_to_the_end": [0, 34, 35], "partialx": [0, 34, 35], "transparent_egress": [0, 34, 35], "transparent_ingress": [0, 34, 35], "index": [0, 14, 23, 33], "modul": [0, 3, 5, 6, 10, 12, 15, 21, 23, 25, 27, 31, 33, 34], "search": [0, 23], "page": 0, "releas": 0, "0": [0, 2, 3, 5, 6, 7, 9, 10, 11, 14, 15, 23, 27, 30, 31, 33, 34], "1": [0, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 17, 22, 23, 27, 30, 31, 33, 34], "9": [0, 5, 15, 17, 34], "last": [0, 5, 7, 12, 13, 14, 23, 33, 34], "chang": [0, 4, 5, 14, 23, 33, 34], "mar": 0, "14": [0, 13, 23, 27, 31, 33, 34], "2024": 0, "meta": [1, 3, 6, 21, 23], "program": [1, 23], "tool": [1, 3, 5, 11, 14, 15, 23, 31, 34], "build": [1, 5, 34], "declar": [1, 2, 27], "framework": 1, "deprec": [2, 4, 33], "code": [2, 7, 10, 15, 23, 31, 33, 34], "i": [2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 17, 21, 23, 27, 31, 33, 34], "m": [2, 14, 31], "keep": [2, 5, 33, 34], "around": [2, 14], "so": [2, 3, 5, 7, 13, 14, 15, 21, 23, 31, 33, 34], "can": [2, 4, 5, 7, 9, 10, 11, 12, 13, 14, 15, 17, 23, 27, 31, 33, 34], "least": [2, 5, 14, 23], "reus": [2, 5, 23], "": [2, 3, 4, 5, 6, 7, 11, 13, 14, 15, 17, 22, 23, 31, 33, 34], "doc": [2, 5, 6, 12, 14, 21, 23, 27, 31, 33], "some": [2, 3, 5, 7, 10, 14, 15, 23, 27, 33, 34], "point": [2, 5, 33], "class": [2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 17, 21, 22, 23, 31, 33, 34], "func": [2, 5, 10, 12, 14, 17, 23, 31, 33, 34], "arg": [2, 3, 5, 7, 9, 10, 14, 23, 27, 31, 33, 34], "kwarg": [2, 5, 7, 9, 10, 14, 23, 27, 31, 33, 34], "sourc": [2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 17, 20, 21, 22, 23, 27, 30, 31, 33, 34], "A": [2, 3, 5, 6, 7, 10, 12, 13, 14, 15, 20, 21, 23, 27, 31, 33, 34], "hold": [2, 13, 14, 23], "caller": [2, 17, 23, 34], "tripl": [2, 23], "allow": [2, 5, 7, 14, 15, 23, 33, 34], "one": [2, 3, 4, 5, 7, 12, 13, 14, 15, 23, 31, 33, 34], "execut": [2, 10], "paramet": [2, 3, 5, 6, 9, 10, 12, 13, 14, 15, 23, 27, 31, 33, 34], "callabl": [2, 3, 4, 5, 7, 10, 11, 12, 14, 15, 17, 20, 21, 23, 31, 33, 34], "call": [2, 5, 7, 10, 12, 14, 15, 17, 21, 23, 31, 33, 34], "argument": [2, 5, 7, 10, 11, 12, 14, 17, 23, 31, 33, 34], "The": [2, 3, 5, 6, 7, 10, 13, 14, 15, 17, 23, 31, 33, 34], "posit": [2, 3, 5, 14, 23, 31, 33, 34], "keyword": [2, 5, 14, 17, 23, 27, 31, 33, 34], "c": [2, 3, 5, 9, 10, 11, 13, 14, 23, 31, 33, 34], "print": [2, 3, 5, 6, 7, 10, 14, 15, 21, 23, 31, 33], "hello": [2, 4, 5, 14, 23, 27, 31, 34], "world": [2, 13, 14, 23, 31, 34], "sep": [2, 5, 13, 14, 23], "what": [2, 4, 5, 7, 10, 13, 14, 15, 22, 23, 31, 33, 34], "happen": [2, 5, 7, 14, 23, 31], "when": [2, 4, 5, 7, 13, 14, 15, 23, 33, 34], "ar": [2, 5, 6, 7, 10, 12, 13, 14, 15, 23, 27, 31, 33, 34], "themselv": [2, 14, 23, 33], "well": [2, 11, 14, 15, 17, 23, 27, 31, 33, 34], "sensibl": 2, "thing": [2, 5, 7, 14, 23, 33], "These": [2, 13, 23, 31, 33], "you": [2, 4, 5, 6, 7, 10, 12, 13, 14, 15, 23, 27, 31, 33, 34], "us": [2, 4, 5, 7, 10, 11, 12, 13, 14, 15, 17, 22, 23, 31, 33, 34], "thi": [2, 4, 5, 6, 7, 10, 12, 13, 14, 15, 22, 23, 27, 31, 33, 34], "defin": [2, 5, 15, 23, 31, 33, 34], "pretti": 2, "complex": [2, 23, 34], "instruct": [2, 14, 31], "onli": [2, 3, 4, 5, 7, 10, 12, 13, 14, 15, 17, 23, 31, 33, 34], "fetch": 2, "data": [2, 4, 5, 14, 21, 23, 33, 34], "need": [2, 5, 7, 10, 14, 15, 23, 33, 34], "everyth": [2, 23, 34], "onc": [2, 5, 23, 33, 34], "re": [2, 5, 6, 12, 15, 23, 31, 33, 34], "readi": [2, 23], "def": [2, 3, 5, 6, 7, 9, 10, 11, 12, 14, 15, 17, 21, 23, 33, 34], "show": [2, 5, 14], "b": [2, 3, 4, 5, 9, 10, 11, 13, 14, 15, 20, 22, 23, 27, 31, 33, 34], "take_f": 2, "return": [2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 17, 21, 23, 27, 31, 33, 34], "5": [2, 5, 6, 7, 10, 13, 14, 15, 22, 23, 30, 31, 33, 34], "double_v": 2, "val": [2, 12, 13, 15, 33], "2": [2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 17, 22, 23, 27, 30, 31, 33, 34], "hellohello": 2, "Of": [2, 5], "cours": [2, 5], "your": [2, 5, 7, 9, 12, 13, 14, 23, 31, 33, 34], "get": [2, 3, 4, 5, 6, 10, 13, 14, 15, 17, 21, 23, 33, 34], "more": [2, 5, 6, 9, 10, 13, 14, 15, 17, 23, 27, 31, 33, 34], "mai": [2, 5, 10, 13, 14, 22, 23, 33, 34], "want": [2, 4, 5, 6, 7, 12, 13, 14, 15, 17, 23, 31, 33, 34], "subclass": [2, 5, 12, 23], "includ": [2, 5, 11, 13, 14, 15, 23, 33, 34], "valid": [2, 5, 12, 14, 23, 31, 33, 34], "compil": [2, 33], "init": 2, "usual": [2, 5, 10, 14, 23, 33, 34], "wai": [2, 5, 12, 14, 15, 23, 31, 34], "function": [2, 3, 5, 6, 7, 10, 11, 12, 13, 14, 15, 17, 20, 21, 22, 23, 27, 31, 33, 34], "erm": 2, "But": [2, 5, 6, 12, 13, 14, 23, 31, 33, 34], "sometim": [2, 12, 14, 23, 33, 34], "do": [2, 4, 5, 7, 12, 13, 14, 15, 23, 33, 34], "differ": [2, 5, 9, 10, 13, 14, 23, 33, 34], "like": [2, 3, 4, 5, 7, 13, 14, 15, 23, 33, 34], "put": [2, 9, 12, 14, 23], "queue": 2, "etc": [2, 5, 6, 14, 23, 31, 33, 34], "That": [2, 5, 7, 13, 14, 15, 23, 33, 34], "where": [2, 5, 13, 14, 15, 22, 23, 33, 34], "specifi": [2, 4, 5, 7, 13, 14, 15, 17, 23, 31, 33, 34], "_caller": 2, "mycommand": 2, "self": [2, 3, 5, 9, 10, 12, 23, 33, 34], "k": [2, 5, 12, 14, 17, 23, 33, 34], "result": [2, 4, 5, 13, 14, 15, 22, 23, 33, 34], "built": [2, 5, 14, 23], "none": [2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 17, 21, 22, 23, 27, 31, 33, 34], "classmethod": [2, 5, 10, 15, 23, 33, 34], "curri": [2, 23, 34], "kw_default": 2, "an": [2, 4, 5, 7, 9, 10, 12, 13, 14, 15, 17, 23, 30, 31, 33, 34], "maker": [2, 34], "specif": [2, 5, 7, 12, 14, 15, 23, 31, 33, 34], "default": [2, 3, 4, 5, 9, 10, 11, 13, 14, 15, 17, 23, 27, 31, 33, 34], "foo": [2, 4, 5, 6, 9, 11, 14, 23, 27, 31, 33, 34], "x": [2, 4, 5, 7, 9, 10, 12, 14, 15, 17, 22, 23, 27, 31, 33, 34], "str": [2, 5, 6, 7, 10, 12, 13, 14, 17, 21, 22, 23, 27, 31, 33, 34], "y": [2, 4, 5, 9, 10, 14, 17, 22, 23, 27, 31, 33, 34], "int": [2, 3, 5, 9, 11, 12, 14, 15, 21, 23, 27, 30, 31, 33, 34], "hi": [2, 4, 5, 13, 14, 34], "3": [2, 3, 4, 5, 6, 10, 11, 12, 13, 14, 15, 17, 22, 23, 27, 30, 31, 33, 34], "hihihi": 2, "foo_command": 2, "4": [2, 5, 11, 12, 13, 14, 15, 22, 23, 27, 30, 31, 33, 34], "hihihihi": [2, 34], "ff": [2, 5, 14, 23, 33], "hihi": [2, 34], "mk_command": 2, "type": [2, 5, 7, 9, 11, 12, 13, 14, 15, 23, 27, 31, 33], "tupl": [2, 5, 12, 13, 14, 15, 17, 23, 27, 31, 33, 34], "dict": [2, 3, 4, 5, 7, 10, 11, 12, 13, 14, 15, 17, 21, 23, 27, 31, 33, 34], "ani": [2, 4, 5, 7, 10, 12, 14, 15, 23, 27, 31, 33, 34], "what_to_do_with_remaind": [2, 23], "ignor": [2, 7, 14, 17, 23, 31, 33], "float": [2, 3, 5, 9, 11, 12, 14, 15, 23, 27, 34], "mult": [2, 5, 14], "w": [2, 5, 9, 10, 14, 23, 27, 34], "z": [2, 4, 5, 9, 14, 17, 23, 27, 31, 34], "d": [2, 3, 5, 10, 11, 13, 14, 23, 31, 33, 34], "e": [2, 5, 10, 11, 13, 14, 23, 31, 33, 34], "6": [2, 5, 14, 15, 23, 27, 31, 33, 34], "7": [2, 3, 13, 14, 15, 23, 30, 31, 33, 34], "13": [2, 5, 34], "iter": [2, 4, 5, 11, 12, 13, 14, 15, 23, 30, 31, 33, 34], "make": [2, 5, 7, 11, 12, 14, 15, 23, 31, 33, 34], "object": [2, 3, 4, 5, 6, 7, 9, 10, 13, 14, 15, 17, 23, 27, 31, 33, 34], "argnam": [2, 5, 23, 31], "argval": [2, 5, 31], "item": [2, 3, 4, 5, 7, 12, 13, 14, 23, 33, 34], "should": [2, 5, 6, 12, 13, 15, 23, 31, 33, 34], "draw": [2, 14], "from": [2, 3, 4, 5, 6, 7, 9, 10, 12, 13, 14, 15, 17, 21, 22, 23, 31, 33, 34], "__name__": [2, 5, 14, 22, 23, 31, 33, 34], "provid": [3, 5, 13, 14, 23, 33, 34], "interfac": [3, 5, 6, 14, 21, 23, 33, 34], "python": [3, 5, 10, 12, 14, 15, 23, 31, 33], "seealso": 3, "py2misc": 3, "py2stor": 3, "tree_stor": 3, "py": [3, 23, 27], "obj": [3, 5, 6, 10, 13, 14, 15, 22, 23, 31, 33], "attr": [3, 5], "inform": [3, 14, 21, 23, 27, 31, 34], "about": [3, 14, 21, 23, 27, 33, 34], "pprint": [3, 5, 14, 21], "my_arg": 3, "10": [3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 22, 23, 27, 31, 33, 34], "obj_nam": [3, 13], "type_nam": 3, "module_nam": 3, "o": [3, 10, 14, 23], "myo": 3, "assert": [3, 5, 9, 10, 11, 12, 13, 14, 15, 17, 21, 22, 23, 31, 33, 34], "set": [3, 5, 10, 12, 13, 15, 23, 33, 34], "list": [3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 21, 22, 23, 27, 30, 31, 33, 34], "variabl": [3, 12, 14, 23, 33, 34], "v": [3, 17, 33, 34], "notfound": 3, "see": [3, 4, 5, 7, 10, 12, 13, 14, 15, 20, 23, 27, 31, 33, 34], "non": [3, 5, 13, 14, 23, 30, 31], "null": [3, 11], "view": [3, 4, 13, 23], "__doc__": [3, 5, 12, 14, 21, 23], "document": [3, 14, 23], "name": [3, 4, 5, 10, 11, 12, 14, 17, 21, 23, 31, 33, 34], "kind": [3, 10, 12, 14, 23, 27, 31, 33, 34], "positional_or_keyword": [3, 23, 31, 34], "annot": [3, 5, 9, 11, 12, 21, 23, 27, 33, 34], "doc_str": [3, 6], "return_annot": [3, 23], "g": [3, 5, 10, 14, 23, 31, 33, 34], "some_string_id_of_a_custom_typ": 3, "inspect": [3, 5, 6, 9, 13, 14, 15, 17, 23, 31, 33, 34], "some_typ": 3, "map": [3, 4, 5, 7, 11, 13, 14, 15, 17, 22, 23, 31, 33, 34], "read": [3, 14, 34], "arg_spec": 3, "valu": [3, 4, 5, 7, 10, 11, 12, 13, 14, 15, 17, 22, 23, 27, 31, 33, 34], "t": [3, 4, 5, 6, 7, 10, 12, 13, 14, 23, 31, 33, 34], "now": [3, 4, 5, 6, 7, 10, 14, 23, 31, 33, 34], "cannibalist": 3, "fun": 3, "follow": [3, 5, 6, 10, 12, 14, 23, 31, 33, 34], "skip": [3, 12], "becaus": [3, 4, 5, 12, 14, 21, 23, 33, 34], "work": [3, 4, 5, 7, 13, 14, 15, 17, 23, 33, 34], "var_posit": [3, 23], "kwd": 3, "var_keyword": [3, 23], "__init__": [3, 5, 10, 33], "__new__": 3, "cl": [3, 5, 10, 23, 34], "merg": [4, 5, 14, 23], "mark": 4, "combin": [4, 23, 27, 31], "overlai": 4, "multipl": [4, 14, 15, 23, 33], "hierarch": 4, "effici": [4, 34], "could": [4, 14, 15, 23, 31, 33, 34], "sever": [4, 5, 14, 15, 23, 27, 31, 33, 34], "layer": 4, "deep": 4, "dictionari": [4, 10, 11, 17, 31, 33, 34], "produc": [4, 5, 34], "new": [4, 12, 13, 15, 23, 31, 33, 34], "them": [4, 5, 12, 14, 23, 31, 33, 34], "act": 4, "exactli": 4, "without": [4, 14, 23, 27, 33, 34], "copi": [4, 5, 23, 27, 33, 34], "doesn": [4, 5, 7, 14, 23, 33, 34], "actual": [4, 5, 10, 13, 14, 23, 31, 34], "intend": [4, 23, 34], "immut": [4, 33], "It": [4, 5, 7, 14, 15, 23, 33, 34], "safe": 4, "leaf": [4, 13], "reflect": [4, 23], "here": [4, 5, 11, 14, 15, 17, 23, 27, 33, 34], "structur": [4, 13, 22, 33], "tree": [4, 10, 13, 15, 33], "base1": 4, "a1": 4, "a2": 4, "a3": 4, "b1": 4, "b2": 4, "base2": 4, "b4": 4, "a4": 4, "cm": 4, "let": [4, 5, 13, 14, 15, 17, 22, 23, 31, 34], "three": [4, 15, 23, 34], "base3": 4, "sinc": [4, 5, 7, 14, 23, 33, 34], "els": [4, 5, 15, 23, 33], "ha": [4, 5, 6, 13, 14, 23, 27, 31, 33, 34], "http": [4, 5, 10, 12, 13, 14, 15, 20, 23, 27, 31, 33], "gist": 4, "github": [4, 10, 20, 23, 27, 31, 33], "com": [4, 10, 14, 20, 23, 27, 31, 33], "klortho": 4, "7d83975559bdcc47ac64fd7d877934f6": 4, "to_dict": 4, "convert": [4, 5, 10, 12, 15, 34], "222": 4, "333": 4, "ask": [4, 5, 6, 7, 23], "If": [4, 5, 6, 7, 12, 13, 14, 15, 17, 23, 31, 33, 34], "compar": [4, 14, 23], "normal": [4, 5, 14, 17, 23, 33, 34], "flat": [4, 13, 14], "nest": [4, 11, 13, 14, 15], "chain": 4, "note": [4, 5, 7, 9, 10, 13, 14, 15, 23, 27, 31, 33, 34], "preced": [4, 23, 34], "invers": [4, 13, 23], "befor": [4, 5, 7, 14, 23, 34], "similar": [4, 14, 23], "natur": 4, "true": [4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 22, 23, 27, 31, 33, 34], "_": [4, 5, 22, 31], "fals": [4, 5, 6, 10, 11, 12, 13, 14, 15, 22, 23, 31, 33, 34], "src": [4, 34], "kei": [4, 5, 7, 10, 12, 13, 14, 15, 17, 20, 21, 22, 23, 33, 34], "yield": [4, 5, 13, 14, 15, 31, 33, 34], "uniqu": [4, 14], "element": [4, 5, 6, 11, 14, 23, 33], "order": [4, 5, 10, 23, 33, 34], "which": [4, 5, 6, 10, 14, 15, 17, 23, 31, 33, 34], "thei": [4, 5, 12, 14, 15, 17, 23, 31, 33, 34], "first": [4, 5, 6, 9, 10, 14, 15, 23, 27, 31, 33, 34], "appear": [4, 5, 12, 23, 33], "repetiti": 4, "By": [4, 13, 23, 33], "itself": [4, 5, 7, 11, 13, 14, 15, 23, 33, 34], "either": [4, 5, 10, 27, 33], "conveni": [4, 5, 6, 14, 15, 23, 34], "string": [4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 21, 23, 27, 31, 33, 34], "attribut": [4, 5, 6, 7, 10, 12, 14, 15, 23, 33, 34], "uniqueifi": 4, "fall": [4, 14, 23], "back": [4, 14, 23], "present": [4, 14, 23, 33, 34], "pleasantri": 4, "ok": 4, "bye": 4, "ye": [4, 23, 33], "lambda": [4, 5, 7, 9, 14, 15, 22, 23, 31, 33, 34], "len": [4, 5, 6, 13, 14, 22, 23, 33, 34], "decor": [5, 10, 11, 12, 23, 34], "exclud": [5, 14, 34], "factori": [5, 7, 23, 33, 34], "help": [5, 23, 33, 34], "picklabl": [5, 31, 33], "One": [5, 14, 23, 31, 33], "functool": [5, 7, 14, 23, 33, 34], "partial": [5, 7, 14, 15, 23, 33, 34], "fix": [5, 14, 23, 30, 34], "therebi": 5, "creat": [5, 13, 14, 15, 20, 23, 31, 33, 34], "22": [5, 23, 31, 34], "23": 5, "new_foo": [5, 23], "couldn": 5, "In": [5, 14, 23, 31, 33, 34], "essenc": 5, "equival": [5, 23, 34], "For": [5, 13, 14, 15, 23, 27, 33, 34], "also": [5, 7, 10, 12, 13, 14, 15, 22, 23, 27, 31, 33, 34], "repr": [5, 33], "even": [5, 14, 15, 23, 31, 33, 34], "tell": [5, 23, 34], "u": [5, 13, 15], "our": [5, 15, 23, 33, 34], "instanc": [5, 6, 7, 9, 10, 14, 15, 23, 31, 33, 34], "underli": [5, 23, 34], "16": [5, 23, 27], "further": [5, 14, 15, 23, 34], "indic": [5, 23, 33, 34], "factory_no_a": 5, "recip": [5, 7, 14], "sai": [5, 7, 14, 15, 17, 23, 31, 34], "accessor": 5, "callback": [5, 7, 31, 33], "sure": [5, 23], "everi": [5, 27], "time": [5, 12, 14, 23, 31, 33, 34], "problemat": 5, "anoth": [5, 6, 11, 23], "solut": [5, 23], "func_returning_obj": 5, "get_42": 5, "42": [5, 6, 10, 13, 14, 23, 31, 33], "properti": [5, 14, 23, 33, 34], "been": [5, 31, 34], "ad": [5, 27, 33], "implement": [5, 14, 15, 23, 33], "get_hello": 5, "except": [5, 7, 12, 15, 23, 33, 34], "method_func": [5, 34], "method_nam": [5, 10, 33, 34], "class_nam": 5, "dynam": 5, "method": [5, 6, 9, 10, 12, 13, 15, 21, 23, 33, 34], "must": [5, 17, 23, 31, 33, 34], "desir": [5, 14, 23, 27, 33, 34], "take": [5, 7, 14, 23, 31, 33, 34], "addit": [5, 14, 17], "plu": [5, 31], "__call__": 5, "assign": [5, 7, 13, 14, 23, 33, 34], "12": [5, 14, 34], "reassign": 5, "instead": [5, 13, 14, 15, 23, 31, 33, 34], "20": [5, 14, 22, 33], "__getitem__": [5, 10], "we": [5, 6, 7, 13, 14, 15, 17, 22, 23, 31, 33, 34], "still": [5, 7, 14, 23, 33, 34], "have": [5, 6, 7, 12, 13, 14, 15, 17, 22, 23, 31, 33, 34], "construct": [5, 23, 33, 34], "contain": [5, 6, 14, 21, 22, 23, 27, 33, 34], "whose": [5, 13, 14, 23], "exist": [5, 7, 12, 14, 23, 33, 34], "enforc": [5, 23], "made": [5, 9, 14, 15, 31, 33, 34], "bar": [5, 14, 23, 27, 33, 34], "try": [5, 13, 15, 23, 31, 33, 34], "attributeerror": [5, 23], "expect": [5, 12, 14, 23], "miss": [5, 13, 23, 33], "pass": [5, 12, 13, 14, 23, 31, 33], "decorator_func": 5, "repurpos": 5, "both": [5, 12, 14, 15, 23, 33, 34], "origin": [5, 13, 23, 33, 34], "form": [5, 10, 14, 31, 33, 34], "wrapped_func": [5, 17, 34], "abl": [5, 12, 14, 15, 23, 33, 34], "ll": [5, 6, 7, 13, 14, 15, 23, 33, 34], "all": [5, 7, 9, 13, 14, 15, 17, 22, 23, 31, 33, 34], "own": [5, 7, 13, 23, 31, 34], "good": [5, 23], "doubl": 5, "up": [5, 14, 15], "multipli": [5, 17, 34], "_func": 5, "wrapped_foo": 5, "30": [5, 14, 15, 22, 31, 33, 34], "multiply_by_3": 5, "other": [5, 10, 14, 17, 23, 33, 34], "decorator_2": 5, "transform": [5, 11, 15, 23, 31, 33, 34], "traceback": [5, 7, 12, 14, 23, 33, 34], "most": [5, 7, 12, 14, 23, 33, 34], "recent": [5, 7, 12, 14, 23, 33, 34], "assertionerror": [5, 12, 23], "wa": [5, 7, 14, 23, 31, 33, 34], "_empti": [5, 34], "decorator_3": 5, "besid": [5, 23], "condition_of_argnam": 5, "assur": 5, "meet": [5, 23], "condit": [5, 7, 11, 15, 22, 23], "below": [5, 7, 23, 31, 34], "being": [5, 13, 14, 23, 33, 34], "gener": [5, 6, 13, 14, 15, 30, 31, 33, 34], "boolean": [5, 11, 33], "explicit": [5, 14, 31, 33], "would": [5, 14, 23, 33, 34], "isinst": [5, 6, 12, 15, 23], "just": [5, 7, 13, 14, 15, 16, 23, 27, 31, 33, 34], "greet_peopl": 5, "greet": 5, "alic": [5, 33], "bob": [5, 33], "func_or_factory_thereof": 5, "Will": [5, 12, 27, 33], "input": [5, 10, 11, 12, 13, 14, 15, 21, 23, 31, 34], "consid": [5, 10, 13, 23, 33, 34], "user": [5, 14, 23, 31, 33], "presum": 5, "seek": 5, "preprocess": 5, "output": [5, 6, 11, 12, 14, 17, 21, 23, 31, 34], "appli": [5, 14, 23, 27, 33, 34], "pre": 5, "post": 5, "process": [5, 6, 10, 12, 23], "15": 5, "format": 5, "bound": [5, 10, 31, 34], "static": [5, 12, 14, 15], "initi": 5, "staticmethod": 5, "static_method": 5, "class_method": 5, "big": 5, "ey": 5, "print_dict": [5, 14], "doctest": [5, 6, 14], "sort": [5, 12, 14, 22, 23], "pair": [5, 13, 14, 23, 31, 33, 34], "right": [5, 10, 14, 34], "handl": [5, 7, 14, 15, 23], "uniformli": 5, "look": [5, 14, 15, 22, 23, 31, 33], "merge_args_and_kwarg": 5, "merger": 5, "usag": [5, 8, 23, 33], "demo": [5, 14, 27, 31, 34], "logger": 5, "what_to_log": 5, "_call_signatur": 5, "log_output": 5, "func_is_bound": 5, "log": 5, "each": [5, 13, 14, 15, 23, 27, 31, 33, 34], "stuff": [5, 7, 23, 33], "given": [5, 6, 7, 10, 13, 14, 15, 23, 31, 33], "someth": [5, 13, 23, 31, 33], "whether": [5, 6, 7, 10, 23, 33, 34], "unbound": [5, 10], "useless_comput": 5, "same": [5, 7, 13, 14, 23, 31, 33, 34], "too": [5, 11, 12, 23, 33, 34], "hahahaha": 5, "And": [5, 11, 23, 27, 33], "bit": [5, 17, 33, 34], "involv": [5, 14, 15, 23, 33, 34], "_name_args_kwarg": 5, "n": [5, 6, 21, 23, 27], "log_cal": 5, "a_method": 5, "getattr": 5, "setattr": 5, "methods_specs_dict": 5, "easili": [5, 15, 23], "singl": [5, 14, 15, 22, 23, 31], "trans_spec": 5, "associ": [5, 14, 15], "those": [5, 14, 23, 31, 33, 34], "method_trans_spec": 5, "method_output_tran": 5, "zz": [5, 23], "caught_post_error": 5, "verbose_error_messag": 5, "after": [5, 7, 10, 23, 34], "list_rang": 5, "rang": [5, 30, 31], "sum_rang": 5, "sum": [5, 14, 22, 23, 27], "stick": [5, 33], "case": [5, 7, 11, 12, 13, 14, 15, 23, 33, 34], "mani": [5, 23, 31, 34], "situat": [5, 14, 15, 23, 33, 34], "write": [5, 7, 12, 13, 14, 15, 17, 23, 33, 34], "simpler": 5, "than": [5, 14, 15, 23, 33, 34], "accumul": 5, "tag": [5, 21, 27], "top": 5, "effect": [5, 14, 17, 23, 33, 34], "trigger": [5, 14], "forward": 5, "log_thi": 5, "logged_foo": 5, "doe": [5, 12, 14, 23, 27, 31, 33, 34], "lot": [5, 23], "less": [5, 7, 23, 33, 34], "extract": [5, 6, 10, 23, 31, 33, 34], "raw": 5, "response_": 5, "dflt_trans_func": [5, 11], "trans_func_for_arg": 5, "plain": 5, "rel": [5, 21], "path": [5, 13, 33], "full": [5, 13, 31, 33], "pickl": [5, 23, 33], "filepath": 5, "load": [5, 13, 33], "rootdir": 5, "target": [5, 10, 23, 34], "name_arg": 5, "default_c": 5, "prepend_root": 5, "root": [5, 10, 13], "unchang": [5, 34], "prepend": [5, 13], "_return_a_copy_of_the_class": 5, "_raise_error_if_non_existent_method": 5, "wrapper_for_method": 5, "might": [5, 13, 23, 33, 34], "incur": 5, "run": [5, 31], "overhead": [5, 33], "side": [5, 23, 33], "russian": 5, "doll": 5, "essenti": [5, 6, 23], "undesir": 5, "repeat": 5, "wrapper_funct": 5, "version": [5, 13, 14, 23, 33, 34], "decaor": 5, "place": [5, 16, 23, 33, 34], "wrap_method_output": 5, "transform_class_method_input_and_output": 5, "special": [5, 14, 15, 23, 33], "aa": [5, 13], "nd": 5, "trans_specs_for_method": 5, "understood": [5, 14, 15, 31], "tran": [5, 34], "two": [5, 10, 14, 17, 23, 33, 34], "toi": 5, "demonstr": 5, "basic": [5, 12, 14], "second": [5, 14, 23], "silli": 5, "third": [5, 23], "applic": [5, 14, 17, 23, 33], "real": [5, 23, 27], "life": 5, "op": 5, "counter": [5, 22], "count": 5, "collect": [5, 14, 22, 33, 34], "userdict": 5, "add_item": 5, "updat": [5, 15, 23, 33], "don": [5, 12, 14, 23, 31, 33, 34], "word": 5, "letter": 5, "newop": 5, "intercept": 5, "fed": [5, 14], "out": [5, 6, 14, 23, 31, 33], "th": 5, "again": [5, 7, 10, 14, 23, 27, 33], "behav": [5, 23, 33], "behavior": [5, 12, 23], "care": [5, 23, 33, 34], "rather": [5, 13], "safer": [5, 23, 33], "weird": 5, "val_in_tran": 5, "incom": [5, 34], "val_out_tran": 5, "sub": [5, 23], "replac": [5, 13, 23], "key_in_tran": 5, "__": 5, "underscor": 5, "key_out_tran": 5, "remov": [5, 13, 23, 33, 34], "charact": [5, 13], "__contains__": [5, 10], "__setitem__": [5, 10], "__delitem__": [5, 10], "__iter__": [5, 10], "shoo": 5, "store": [5, 13, 17, 33], "under": [5, 14, 33], "__str__": 5, "isn": [5, 12, 14, 31, 33, 34], "__foo": 5, "yet": [5, 23, 34], "star": 5, "war": 5, "hood": [5, 33], "nor": [5, 23], "__star": 5, "del": [5, 13, 33], "delet": [5, 33], "pretend": [5, 13], "waveform": 5, "binari": [5, 20, 23], "retriev": 5, "addition": [5, 34], "wav": [5, 15], "file": [5, 14, 33], "within": [5, 7, 10, 14, 15], "directori": [5, 33], "dir": 5, "extens": [5, 9, 15], "won": [5, 7, 13, 23, 33], "abs_path_of_rel_path": 5, "rel_path": 5, "absolut": 5, "rel_path_of_abs_path": 5, "list_to_byt": 5, "byte": [5, 33], "bytes_to_list": 5, "wf": 5, "year": 5, "down": [5, 14, 16], "x02": 5, "x00": 5, "x01": 5, "x05": 5, "x04": 5, "x03": 5, "seq": 6, "exc_msg": 6, "lineno": 6, "indent": [6, 10, 33], "option": [6, 12, 15, 23, 31, 33], "extend": [6, 15, 17, 23, 34], "example_callback": 6, "mk_example_wants_callback": 6, "local": [6, 31, 33], "example_wants_callback": 6, "recurs": [6, 10, 13, 34], "found": [6, 14, 15, 23, 33, 34], "find": [6, 14, 23, 34], "output_prefix": 6, "line": [6, 27, 31, 34], "prefix": [6, 10, 13], "scope": [6, 14, 33], "_test_func": 6, "doctest_1": 6, "doctest_2": 6, "line_after_a_doc_test": 6, "another_line_that_is_in_the_doc_test": 6, "oh": [6, 14, 23], "getdoc": 6, "include_attr_without_doctest": 6, "altern": [6, 14], "block": [6, 7], "text": [6, 15], "splitter": 6, "until": 6, "tt": [6, 10], "There": [6, 31, 33], "correspond": [6, 13, 23, 33, 34], "explanatori": 6, "next": [6, 12, 14, 15, 22, 27, 31], "represent": [6, 13, 31], "on_error": 7, "baseexcept": 7, "context": [7, 14, 33], "manag": [7, 10, 14, 23, 33], "catch": [7, 23, 33], "particular": [7, 23, 34], "exit_valu": 7, "caught": [7, 31], "envok": 7, "pattern": [7, 15, 22, 23, 34], "how": [7, 14, 15, 17, 23, 31, 33, 34], "zerodivisionerror": 7, "print_and_return": 7, "msg": 7, "interrupt": 7, "me": [7, 23], "keyboardinterrupt": 7, "imagin": 7, "notifi": 7, "someon": 7, "he": 7, "check": [7, 12, 15, 23, 33], "exit": [7, 14], "exited_with_handled_except": 7, "avail": [7, 14, 33], "exited_with_except": 7, "divis": 7, "zero": 7, "though": [7, 13, 14, 23, 33, 34], "got": [7, 14, 23], "cover": [7, 12], "printer": 7, "callaback": [7, 31], "messag": 7, "few": [7, 14, 23, 31], "custom": [7, 13, 23, 33], "earli": 7, "rais": [7, 12, 14, 23, 33, 34], "tip": [7, 23, 31], "rerais": 7, "end": [7, 34], "print_and_rais": 7, "To": [7, 14, 17, 23, 31, 33, 34], "march": 7, "meant": [7, 12, 13, 23, 27], "mind": [7, 10, 23], "packag": 7, "forbidden_kei": 7, "alreadi": [7, 13, 23, 33, 34], "calculu": [9, 23], "goodi": 9, "fingertip": 9, "varieti": [9, 23], "positional_onli": [9, 23], "between": [9, 14, 15, 31], "extract_args_and_kwarg": [9, 23], "bind": [9, 23, 34], "hand": [9, 14, 23, 34], "apply_default": [9, 23, 34], "_apply_default": [9, 23], "seem": 9, "favor": 9, "over": [9, 17, 23, 31, 34], "analyz": [10, 12], "alia": [10, 14, 23, 33, 34], "field": [10, 23], "number": [10, 12, 14, 15, 23, 27, 31, 33], "trace": 10, "i2mint": [10, 20, 23, 27, 31, 33], "issu": [10, 20, 23, 31, 33], "56": 10, "detail": [10, 23, 33], "__add__": 10, "__truediv__": 10, "__sub__": 10, "__mul__": 10, "mol": 10, "oper": [10, 13, 14, 15, 20, 22, 23], "__invert__": 10, "track": 10, "access": [10, 14, 23], "__metaclass__": 10, "on_access": 10, "record": 10, "its": [10, 23, 33], "core": 10, "attrs_to_ignor": 10, "func_nam": 10, "ast": 10, "node": [10, 13, 15, 33], "remove_dupl": 10, "thereof": 10, "said": [10, 15, 23, 33], "target_method": 10, "come": [10, 14, 34], "other_method": 10, "a_class_method": 10, "cls_method": 10, "init_kwarg": 10, "method_kwarg": 10, "graph": [10, 17], "from_key_to_valu": 10, "bool": [10, 15, 23, 33], "liter": [10, 12, 33], "graphviz": 10, "mermaid": 10, "suffix": 10, "displai": 10, "privid": 10, "from_nod": 10, "to_nod": 10, "visual": 10, "depend": [10, 23, 34], "jupyt": 10, "notebook": 10, "graphviz_templ": 10, "templat": [10, 34], "requir": [10, 15, 23, 33, 34], "bear": 10, "graphviz_str": 10, "graph_dict": 10, "mention": [10, 23, 34], "digraph": 10, "td": 10, "fn": 10, "refer": [10, 13], "tracker_inst": 10, "ctx": 10, "gracefulli": 10, "start": [10, 31], "stop": 10, "names_and_sig": 10, "__lshift__": 10, "__gt__": 10, "__rshift__": 10, "__mod__": 10, "kt": 10, "vt": 10, "__pos__": 10, "__ior__": 10, "__imatmul__": 10, "__eq__": 10, "__index__": 10, "__ifloordiv__": 10, "__lt__": 10, "__concat__": 10, "__neg__": 10, "__inv__": 10, "__ge__": 10, "__imul__": 10, "__matmul__": 10, "__xor__": 10, "__iconcat__": 10, "__le__": 10, "__not__": 10, "__irshift__": 10, "__ne__": 10, "__isub__": 10, "__ipow__": 10, "__ixor__": 10, "__itruediv__": 10, "__iand__": 10, "__ilshift__": 10, "__imod__": 10, "__and__": 10, "__or__": 10, "__abs__": 10, "__pow__": 10, "__floordiv__": 10, "__iadd__": 10, "__reversed__": 10, "__ror__": 10, "__len__": [10, 12], "__rsub__": 10, "__rdiv__": 10, "__rfloordiv__": 10, "__rdivmod__": 10, "__rmul__": 10, "__rxor__": 10, "__rmod__": 10, "__radd__": 10, "__rtruediv__": 10, "__rlshift__": 10, "__rrshift__": 10, "__rand__": 10, "__rpow__": 10, "method_factori": 10, "_dflt_method_factori": 10, "perform": [10, 14], "tranform": 11, "input_tran": 11, "foo3": 11, "argname_2_trans_func": 11, "accord": [11, 15, 23, 33, 34], "foo2": 11, "dflt": 11, "foo4": 11, "some_valu": 11, "complex_types_result": 11, "trans_func_for_typ": 11, "tri": [11, 14, 23], "cast": [11, 33, 34], "json": [11, 33], "friendli": [11, 23], "csv": [11, 15], "protocol": [12, 15, 34], "express": [12, 13, 14, 23, 31, 33, 34], "sizedandappend": 12, "append": [12, 31, 34], "length": [12, 14], "www": [12, 15], "org": [12, 15, 31], "dev": 12, "pep": [12, 33], "0544": 12, "my": [12, 23], "bad": [12, 23], "terminologi": 12, "swingl": 12, "id": 12, "linter": 12, "manipul": [12, 13, 23], "abc": 12, "abstract": 12, "restrict": [12, 23, 34], "fill": 12, "gap": 12, "verbos": [12, 14], "With": [12, 34], "prop": [12, 23, 33], "this_attr_does_not_exist": 12, "typ": 12, "input_typ": 12, "output_typ": 12, "fail": [12, 23, 33], "parametr": [12, 14, 23, 33], "tp": 12, "aka": 12, "assign_to_glob": 12, "var": [12, 23], "often": [12, 15, 23, 33, 34], "give": [12, 14, 15, 23, 31, 34], "_aka": 12, "union": 12, "mytyp": 12, "todo": [12, 14, 23], "part": [12, 15], "newtyp": 12, "against": [12, 23], "valueerror": [12, 14, 15, 23, 33, 34], "invalid": [12, 14], "flatten": [13, 14], "key_typ": 13, "node_typ": 13, "auto_node_writ": 13, "termin": 13, "leav": [13, 23, 34], "crud": 13, "2a": 13, "aba": 13, "kp": 13, "new_kei": 13, "mk_new_nod": 13, "extract_key_path": 13, "field_nam": [13, 33], "use_default": 13, "default_v": [13, 31], "separ": [13, 33], "dot": [13, 33], "thats": 13, "getitem": 13, "key_path_prefix": 13, "through": [13, 14, 15, 23, 31, 33, 34], "store_typ": 13, "key_path_so_far": 13, "direct": 13, "input_dict": 13, "setitem": 13, "setitem_recurs": 13, "old": [13, 27, 33], "8": [13, 14, 15, 23, 27, 34], "comput": [13, 15, 34], "aca": 13, "attrgett": [13, 23], "__qualname__": [13, 23], "path_of_modul": 13, "__module__": [13, 21, 23, 33], "dotpath": 13, "rememb": [13, 23], "permiss": 13, "thought": 13, "assum": [13, 23, 33], "therefor": [13, 14, 15, 31, 34], "flat_d": 13, "str_path": 13, "referenc": [13, 33], "dotpath_to_modul": 13, "fundament": 14, "compos": [14, 23], "flexibl": [14, 23], "common": [14, 23, 34], "pool": [14, 34], "choke": [14, 23], "extra": [14, 17, 23, 31], "unrecogn": 14, "enter": 14, "togeth": [14, 23, 31, 34], "imag": 14, "githubusercont": 14, "1906276": 14, "138004878": 14, "bfe17115": 14, "c25f": 14, "4d22": 14, "9740": 14, "0fef983507c0": 14, "png": 14, "unnam": 14, "encapsul": [14, 31], "setup": 14, "tear": 14, "task": 14, "open": [14, 33], "connect": 14, "bundl": 14, "perhap": 14, "txt": [14, 15], "another_context_manag": 14, "complain": 14, "member": 14, "As": [14, 34], "contextlib": [14, 22], "contextmanag": 14, "some_context_manag": 14, "close": 14, "not_a_context_manag": 14, "_generatorcontextmanag": 14, "chosen": 14, "auto_nam": 14, "best": [14, 33], "ing": 14, "know": [14, 23], "suppos": [14, 23], "insid": 14, "inde": [14, 23, 34], "outsid": [14, 15], "via": [14, 33], "hidden": 14, "_i": 14, "_0": 14, "11": [14, 15, 23, 31, 34], "unnamed_func": 14, "named_func": 14, "mf1": 14, "raison": 14, "etr": 14, "wouldn": 14, "postion": 14, "vararg": [14, 33], "typeerror": [14, 23, 33], "normalized_func": 14, "were": [14, 15, 22, 23], "reason": [14, 34], "hash": 14, "mf2": 14, "mysum": 14, "extra_stuff": 14, "iterable_of_input": 14, "pam": 14, "dual": 14, "groot": 14, "am": [14, 23], "_2": 14, "ones": [14, 23], "multobj": 14, "bar_result": 14, "Or": [14, 33, 34], "abov": [14, 23, 31, 34], "gather": 14, "func_kei": 14, "func_output": [14, 34], "control": [14, 15, 17, 23, 31, 33, 34], "prefer": 14, "yourself": [14, 33], "call_gener": 14, "directli": [14, 23, 31, 34], "gen": 14, "automat": [14, 23, 31, 33, 34], "itemgett": 14, "methodcal": 14, "better": [14, 33, 34], "readabl": [14, 34], "miscellan": 14, "chose": [14, 23], "auto": 14, "mo": 14, "cannot": [14, 34], "conflict": 14, "figur": [14, 23, 33], "dunder": 14, "stringif": 14, "_1": 14, "alwai": [14, 23, 33], "identifi": [14, 33], "far": [14, 23, 34], "clash": [14, 23, 31], "panda": [14, 22], "datafram": [14, 22], "column": [14, 22, 23], "reserv": 14, "this_and_that": 14, "noth": [14, 15, 23, 27, 33], "much": [14, 23], "exclude_nam": 14, "obj_to_nam": 14, "name_for_posit": 14, "position_idx": 14, "names_and_object": 14, "_3": 14, "avoid": [14, 23, 33], "reveal": 14, "fact": [14, 22, 23], "proper": [14, 33], "revert": 14, "achiev": 14, "forbid": 14, "acheiv": 14, "explicitli": [14, 23, 34], "reappear": 14, "didn": [14, 34], "taken": [14, 23, 31, 34], "anymor": 14, "obvious": 14, "problem": [14, 23, 34], "abil": [14, 34], "first_list": 14, "second_list": 14, "offer": [14, 34], "exclus": 14, "hardcod": 14, "question": [14, 33], "trick": 14, "awar": 14, "decid": [14, 31], "NOT": [14, 23, 27], "choos": [14, 23, 34], "myopic": 14, "behind": [14, 23], "retri": 14, "logic": [14, 15, 34], "multi": [14, 27], "channel": 14, "multi_func": 14, "say_hello": 14, "say_goodby": 14, "goodby": [14, 34], "lenin": 14, "spec": [14, 23], "q": 14, "why": [14, 23, 34], "named_funcs_dict": 14, "overlap": [14, 30], "prod": 14, "signific": 14, "chunker": 14, "featur": [14, 15, 22, 23], "multi_chunk": 14, "multi_featur": 14, "my_pip": 14, "simpl": [14, 21, 23, 31], "composit": 14, "f_1": 14, "f_n": 14, "purpos": [14, 15, 22, 23, 31, 33, 34], "complet": [14, 23, 31, 34], "add_numb": 14, "multiply_by_2": 14, "stringifi": 14, "met": [14, 15], "pickal": 14, "long": [14, 23, 33], "add_it": 14, "map_and_sum": 14, "60": [14, 31], "unravel": 14, "sequenc": [14, 31, 33], "h": [14, 23, 31, 34], "19": 14, "thirti": 14, "fourti": 14, "40": [14, 31], "guarante": [14, 33], "power": 14, "customiz": 14, "p1": [14, 23], "p2": [14, 23], "func_equ": 14, "eq": [14, 22, 23], "determin": [14, 23, 34], "pipelin": 14, "equal": [14, 15, 23, 33], "getsourc": [14, 23], "source_equ": 14, "forest": 15, "whaaa": 15, "especi": [15, 23], "seri": 15, "eachoth": 15, "ugli": 15, "un": 15, "reusabl": 15, "explor": [15, 21], "objectivi": 15, "mean": [15, 23, 31, 33, 34], "compon": 15, "think": [15, 34], "relationship": 15, "loop": 15, "along": 15, "itertool": 15, "robust": [15, 23], "usabl": 15, "main": [15, 23], "actor": 15, "plai": 15, "precis": [15, 34], "final": 15, "aspect": [15, 34], "flow": 15, "rout": 15, "match": [15, 22, 23, 31], "could_be_int": 15, "currentfram": 15, "f_code": 15, "co_nam": 15, "could_be_float": 15, "nope": 15, "st": 15, "cond": 15, "digit": 15, "odd": 15, "seen": [15, 34], "rf": 15, "switch": 15, "zero_mod_5": 15, "one_mod_5": 15, "default_mod_5": 15, "mixin": 15, "deleg": 15, "feat": [15, 22], "feat_cond_then": 15, "fcn": 15, "two_mod_5": 15, "three_mod_5": 15, "four_mod_5": 15, "from_feature_val_map": 15, "fvn": 15, "zero_mod_3": 15, "one_mod_3": 15, "two_mod_3": 15, "mutablemap": [15, 33], "default_factori": [15, 23], "plugin": 15, "get_extens": 15, "split": [15, 23, 33], "data_typ": 15, "tabl": 15, "xl": 15, "audio": 15, "my_fil": 15, "another_fil": 15, "sound": 15, "poem": 15, "constitut": [15, 23], "enabl": [15, 17, 20, 23, 33], "get_protocol": 15, "url": [15, 34], "new_data_typ": 15, "commut": 15, "jazz": 15, "sentinel": [15, 33], "constanc": 15, "cond_nod": 15, "from_object": 15, "mini_lang": 15, "_default_mini_lang": 15, "mini": 15, "languag": 15, "develop": [15, 22], "nodefault": 15, "enhanc": 15, "value_to_compare_to_featur": 15, "then_nod": 15, "jot": 16, "idea": 16, "egress": [17, 34], "inner_arg": [17, 34], "inner_kwarg": [17, 34], "caller_kwarg": 17, "egress_kwarg": 17, "empti": [17, 23, 33, 34], "endow": 17, "realist": [17, 34], "_saving_ingress": 17, "_saving_egress": 17, "save_on_output": 17, "save_her": 17, "exhibit": [17, 31], "func_arg": 17, "func_kwarg": 17, "caller_param": 17, "design": 20, "50": [20, 23], "binary_oper": 20, "r": 20, "test_cal": 21, "arg1": 21, "arg2": 21, "testabl": 21, "descript": [21, 23, 27], "summari": 21, "pop": [21, 33, 34], "endswith": 21, "off": [21, 34], "consist": [21, 23, 33], "experiment": 22, "switch_cas": 22, "paus": 22, "while": 22, "wait": [22, 23], "subsum": 22, "special_featur": 22, "col": 22, "df": 22, "special_comparison": 22, "alleq": 22, "isin": 22, "chainmap": 22, "some_local_func": 22, "comparison": [22, 23], "is_valid_v": 22, "is_valid_comparis": 22, "inject": [22, 31, 33, 34], "is_valid_featur": 22, "81": 22, "80": 22, "filter": [22, 23, 33], "length_hint": 22, "suppress": 22, "modulenotfounderror": 22, "importerror": 22, "pd": 22, "namedtupl": [22, 33, 34], "comp": 22, "lt": 22, "is_valid_feat_and_comp": 22, "filt": 22, "mk_filt": 22, "len_lt": 22, "easier": [23, 34], "flexibli": 23, "choic": 23, "subset": [23, 34], "variad": [23, 31], "keyword_onli": [23, 34], "lost": 23, "reader": 23, "short": 23, "pk": [23, 34], "vp": 23, "vk": 23, "po": 23, "ko": 23, "compat": [23, 33], "somewher": 23, "_parameterkind": 23, "thin": 23, "shorter": 23, "alias": 23, "faster": [23, 34], "quick": 23, "kw": [23, 33], "__validate_parameters__": 23, "api": 23, "sugar": 23, "impos": 23, "mess": 23, "realli": [23, 31], "nice": [23, 31], "feel": 23, "Then": [23, 31], "normalize_kind": 23, "stabl": 23, "deal": 23, "map_argu": 23, "mk_args_and_kwarg": 23, "translat": 23, "fulli": 23, "constraint": 23, "done": 23, "map_arguments_from_variad": 23, "source_argu": 23, "source_args_and_kwarg": 23, "params": 23, "Such": 23, "matrix": 23, "row": 23, "__annotations__": 23, "__defaults__": 23, "__kwdefaults__": 23, "subtract": 23, "insert": [23, 31, 33], "__signature__": 23, "intent": 23, "j": 23, "from_obj": 23, "some_func": 23, "add_optional_keyword": 23, "kwarg_and_default": 23, "kwarg_annot": 23, "add_param": 23, "nativ": 23, "arg_nam": [23, 33], "args_and_kwargs_from_kwarg": 23, "allow_parti": [23, 34], "allow_excess": [23, 34], "ignore_kind": 23, "args_limit": 23, "param_nam": 23, "arg_val": 23, "minimum": 23, "possibl": [23, 34], "maximum": 23, "integ": [23, 31, 33], "rest": 23, "foo_sig": 23, "beg": 23, "explan": 23, "greater": 23, "behvior": 23, "sens": 23, "Not": 23, "lead": 23, "anywai": [23, 33], "recogn": 23, "ever": 23, "unexpect": 23, "ch_param_attr": 23, "param_attr": 23, "arg_new_v": 23, "_allow_reord": [23, 34], "kwargs_new_v": 23, "modifi": [23, 33, 34], "simpli": [23, 33, 34], "quit": [23, 33], "correctli": 23, "oversight": 23, "special_foo": 23, "reorder": [23, 34], "complaint": 23, "fine": 23, "rearrang": 23, "wish": [23, 34], "conserv": [23, 34], "redefin": 23, "another_foo": 23, "regardless": [23, 33, 34], "_ignore_kind": 23, "_allow_parti": 23, "_allow_excess": 23, "_args_limit": 23, "excess": 23, "underspecifi": 23, "later": [23, 34], "extract_kwarg": 23, "yy": 23, "get_nam": 23, "conserve_sig_ord": 23, "interg": 23, "interpret": 23, "has_var_keyword": 23, "index_of_var_keyword": 23, "var_keyword_nam": 23, "twice": 23, "has_var_kind": 23, "has_var_posit": 23, "index_of_var_posit": 23, "other_sig": 23, "kwargs_from_args_and_kwarg": 23, "sorta": 23, "reli": 23, "reduc": 23, "runtim": 23, "bind_parti": 23, "servic": 23, "iff": 23, "fulfil": 23, "accept": 23, "cross": 23, "zoo": 23, "ignore_excess": 23, "not_in_sig": 23, "On": [23, 33], "eight": 23, "total": 23, "respect": [23, 33], "merge_with_sig": 23, "ch_to_all_pk": 23, "default_conflict_method": 23, "strict": 23, "obtain": 23, "insofar": 23, "rule": [23, 34], "observ": 23, "changes_for_nam": [23, 34], "warn": 23, "advanc": 23, "pka": 23, "vpa": 23, "koa": 23, "vka": 23, "poa": 23, "insteadk": 23, "new_sig": 23, "bulk": 23, "repetit": 23, "thenm": 23, "unlik": 23, "n_requir": 23, "math": 23, "a00": [23, 31], "a11": [23, 31], "a12": [23, 31], "a23": 23, "a34": 23, "a35": 23, "a36": [23, 31], "a47": [23, 31], "names_for_kind": 23, "names_of_kind": 23, "group": 23, "cach": [23, 33], "boggl": 23, "bare": 23, "restor": 23, "semant": [23, 33], "saniti": 23, "required_nam": 23, "preserv": 23, "paramat": 23, "frequent": [23, 33], "gotcha": 23, "oo": 23, "sig_or_default": 23, "default_signatur": 23, "no_sig_arg": 23, "no_sig_kwarg": 23, "fake_signatur": 23, "time_takes_no_argu": 23, "align": [23, 33], "sig_or_non": 23, "robust_has_signatur": 23, "easi": 23, "interest": [23, 31], "builtin": [23, 31, 34], "presenc": 23, "source_kwarg": 23, "to_signature_kwarg": 23, "yeah": 23, "author": 23, "parammet": 23, "to_simple_signatur": 23, "with_default": 23, "without_default": 23, "ignore_incompatible_signatur": 23, "copy_funct": [23, 33], "cpython": 23, "pull": 23, "21379": 23, "basinig": 23, "injecton": 23, "ve": [23, 34], "veri": 23, "__kwdefault__": 23, "1024": [23, 34], "misalign": 23, "callable_or_signatur": 23, "position_or_keyword": [23, 34], "carri": 23, "remain": [23, 34], "maintain": 23, "inter": [23, 31], "xyz": 23, "tup": 23, "otherwis": [23, 33, 34], "troubl": 23, "_call_forgivingli": 23, "skipe": 23, "intrud": 23, "args1": [23, 31], "kwargs1": [23, 31], "enforce_sig": 23, "lenienc": 23, "pick": 23, "anyth": [23, 27, 31], "kick": 23, "resolv": [23, 33], "thu": 23, "systemat": [23, 34], "does_not_fit_g_signature_anymor": 23, "this_argnam": 23, "gg": 23, "hh": 23, "ch_variadic_keyword_to_keyword": 23, "new_func": 23, "scene": 23, "goal": 23, "doubt": 23, "wfoo": 23, "neither": 23, "untouch": 23, "variadic_keyword": 23, "alon": [23, 34], "repeatedli": 23, "suggest": 23, "configur": [23, 33], "func1": 23, "func2": 23, "func1_not_func2": 23, "func2_not_func1": 23, "names_and_signatur": 23, "include_all_when_var_keywords_in_param": 23, "assert_no_missing_position_only_arg": 23, "satisfi": 23, "dirti": 23, "param_arg": 23, "param_kwarg": 23, "remaining_kwarg": 23, "position_onli": 23, "rema": 23, "paranoia": 23, "without_remaind": 23, "encount": 23, "crucial": 23, "remaind": 23, "et": 23, "voil\u00e0": 23, "understand": [23, 34], "step": 23, "assert_empti": 23, "argument_argu": 23, "arg_extractor": 23, "from_cal": 23, "param_map": 23, "param_iter": 23, "edg": 23, "No": 23, "ss": 23, "weren": 23, "sig1": 23, "sig2": 23, "annotation_compar": 23, "default_value_compar": 23, "ct": 23, "variou": 23, "toeach": 23, "pariti": 23, "kinds_modifi": 23, "convert_to_pk": 23, "behaviour": 23, "annoy": 23, "isinstance_of_str": 23, "class_or_tupl": 23, "kinder": 23, "_isinst": 23, "args_without_default": 23, "args_with_default": 23, "base_name_of_obj": 23, "caught_except": 23, "_return_non": 23, "cached_properti": 23, "cached_prop": 23, "qualifi": 23, "alt": 23, "param1": 23, "param2": 23, "aggreg": 23, "issuecom": 23, "1381686812": 23, "discuss": 23, "annoi": [23, 33, 34], "scratch": [23, 33], "param_kind": 23, "baz": [23, 33], "dflt_keyword_onli": 23, "solv": 23, "partial_func": 23, "0x": 23, "frame": [23, 33], "grab": 23, "goe": 23, "mk_param": 23, "cls_name": 23, "make_dataclass": 23, "ensure_signatur": 23, "dataclass": [23, 34], "ther": 23, "advis": 23, "extrem": 23, "mode": 23, "futur": 23, "obei": 23, "verifi": [23, 33], "unic": 23, "fast": 23, "interface_sig": 23, "backend": 23, "frontend": 23, "_adapt_": 23, "my_g": 23, "new_f": 23, "account": 23, "bunch": 27, "py2http": 27, "blob": 27, "master": 27, "any_var": 27, "a_list": 27, "a_dict": 27, "an_int": 27, "a_float": 27, "a_bool": 27, "a_str": 27, "continu": 27, "AND": 27, "sometest": 27, "a_tupl": 27, "an_obj": 27, "someclass": 27, "another_obj": 27, "someotherclass": 27, "blah": [27, 31], "bloo": 27, "pi": [27, 33], "one_keyword": 27, "keyword1": 27, "keyword2": 27, "chk_size": 30, "size": [30, 31], "chunk": 30, "quickli": 31, "sole": 31, "a01": 31, "a13": 31, "a14": 31, "a25": 31, "00111234": 31, "edit": 31, "_str_of_call_arg": 31, "consider": 31, "acal": 31, "infer": 31, "_call_kwarg": 31, "zzz": 31, "level": [31, 33], "decreas": 31, "inclus": 31, "repres": [31, 33, 34], "librari": [31, 33], "html": 31, "shown": 31, "convolut": 31, "break": 31, "a47_": 31, "mix": 31, "code_lin": 31, "_sig_to_str_of_call_args_code_str": 31, "global": [31, 33], "34": 31, "current": [31, 33], "f01": 31, "012": 31, "space": [31, 33], "a22": 31, "bodi": [31, 33], "omit": [31, 33], "quot": 31, "argument_v": 31, "variadics_sourc": 31, "args2": 31, "kwargs1_val": 31, "drawn": 31, "n_arg": 31, "misc": 33, "io_cl": 33, "_io": 33, "bytesio": 33, "open_mod": 33, "rb": 33, "ensur": 33, "pointer": 33, "io": 33, "iobas": 33, "subtyp": 33, "hashabl": 33, "entri": 33, "frozenset": 33, "attempt": 33, "introduc": 33, "standard": 33, "reject": 33, "416": 33, "everywher": 33, "serial": 33, "clear": 33, "fromkei": 33, "popitem": 33, "setdefault": 33, "overwrit": [33, 34], "programmat": 33, "bolton": 33, "readthedoc": 33, "from_func": 33, "At": 33, "get_func": 33, "newli": 33, "fb": 33, "return_f": 33, "varkw": 33, "f_kw": 33, "ignored_arg": 33, "ignored_v": 33, "constructor": [33, 34], "docstr": 33, "denot": 33, "kwonlyarg": 33, "kwonlydefault": 33, "hint": 33, "forth": 33, "filenam": 33, "funcutil": 33, "mutat": 33, "necessari": 33, "add_arg": 33, "no_default": 33, "kwonli": 33, "get_defaults_dict": 33, "execdict": 33, "add_sourc": 33, "with_dict": 33, "__source__": 33, "get_sig_str": 33, "with_annot": 33, "remove_arg": 33, "per": 33, "get_val": 33, "hesit": 33, "mutabl": 33, "appl": 33, "app": 33, "appart": 33, "fff": 33, "dump": 33, "stackoverflow": 33, "73980648": 33, "copy_dict": 33, "globals_": 33, "shallow": [33, 34], "an_attr": 33, "f_copi": 33, "another_attr": 33, "yet_another_attr": 33, "84": 33, "__dict__": 33, "__code__": 33, "__globals__": 33, "job": [33, 34], "furthermor": 33, "dot_path": 33, "get_identfi": 33, "is_identifi": 33, "isidentifi": 33, "disallow": 33, "validat": 33, "less_than_6_char": 33, "okai": 33, "too_long": 33, "toless_than_6_char": 33, "suitabl": 33, "window": 33, "typic": [33, 34], "appdata": 33, "maco": 33, "config": 33, "linux": 33, "folder": 33, "keyerror": 33, "lifo": 33, "lack": 33, "method_funct": 33, "allow_overwrit": 33, "prone": 33, "intern": 33, "duplic": 33, "controvers": 33, "banana": 33, "insert_namedtuples_in_loc": 33, "formatarg": 33, "formatvararg": 33, "formatvarkw": 33, "formatvalu": 33, "formatreturn": 33, "formatannot": 33, "formatargspec": 33, "request": 33, "howev": 33, "reimplement": 33, "term": 33, "creation": 33, "reinvent": 33, "routin": 33, "lambda_func": 33, "descriptor": 33, "david": 33, "beazlei": 33, "cookbook": 33, "book": 33, "recomput": 33, "boolean_valu": 33, "repr_": 33, "_default_sentinel_repr_method": 33, "singleton": 33, "distinguish": 33, "pickabl": 33, "resolut": 33, "idiom": 33, "digress": 33, "undefin": 33, "talk": 33, "info": 33, "unpickled_empti": 33, "unpickl": 33, "anotheremptywithsamenam": 33, "took": 33, "dark": 33, "magic": 33, "system": [33, 34], "pypi": 33, "mysentinel": 33, "thank": 33, "inspir": 33, "great": 33, "make_sentinel": 33, "getter": 33, "dflt_idx_preprocessor": 33, "path_sep": 33, "travers": 33, "idx": 33, "intepret": 33, "outer_arg": 34, "outer_kwarg": 34, "final_output": 34, "outer_sig_bind": 34, "outer_all_kwarg": 34, "inner_all_kwarg": 34, "inner_sig_bind": 34, "inner_sig": 34, "outer_sig": 34, "mechan": 34, "probabl": 34, "correct": 34, "machin": 34, "ingr": 34, "front": 34, "dispatch": 34, "webservic": 34, "trans_all_vals_to_int": 34, "cli_f": 34, "194": 34, "_try_casting_to_numer": 34, "cast_numb": 34, "202": 34, "96": 34, "outer": 34, "inner": 34, "outer_kw": 34, "wrapped_f": 34, "2062": 34, "ch_name": 34, "lose": 34, "name_map": 34, "old_to_new_nam": 34, "doubley": 34, "zee": 34, "163": 34, "plan": 34, "adapt": 34, "in_to_out_sig_chang": 34, "inner_nam": 34, "dict_of_changes_for_that_nam": 34, "restrinct": 34, "lenient": 34, "directly_defined_ingress": 34, "simplest": 34, "predefin": 34, "handi": 34, "renam": 34, "dimens": 34, "four": 34, "constant": 34, "from_signatur": 34, "convieni": 34, "affect": 34, "independ": 34, "2049": 34, "func_to_obj": 34, "func_computing_default": 34, "original_default": 34, "outgo": 34, "hiworld": 34, "straightforward": 34, "itsm": 34, "co": 34, "coco": 34, "link": 34, "definit": 34, "init_param": 34, "extra_attr": 34, "klass": 34, "33": 34, "camel_cas": 34, "camelcas": 34, "_only_if_name_miss": 34, "_allow_overwrit": 34, "func_for_nam": 34, "sequenti": 34, "notic": 34, "instance_param": 34, "method_param": 34, "instance_arg_nam": 34, "known": 34, "practic": 34, "dummi": 34, "fakeinst": 34, "share": 34, "map_nam": 34, "transpar": 34, "possibli": 34, "key_mapp": 34, "new_k": 34, "mapper": 34, "old_nam": 34, "new_nam": 34, "conjunct": 34, "ai": 34, "dee": 34, "_recurs": 34, "_inplac": 34, "key_and_val_func": 34, "relev": 34, "val_func": 34, "mach": 34, "therein": 34, "re_kwargs_tran": 34, "35": 34, "36": 34, "names_to_move_to_the_end": 34, "names_to_mov": 34, "choice_args_func": 34, "move": 34, "_rm_partial": 34, "curried_f": 34, "becam": 34, "unnecessary_doctest": 34, "i2": 35}, "objects": {"": [[1, 0, 0, "-", "i2"]], "i2": [[2, 0, 0, "-", "_deprecated"], [3, 0, 0, "-", "base"], [4, 0, 0, "-", "chain_map"], [5, 0, 0, "-", "deco"], [6, 0, 0, "-", "doc_mint"], [7, 0, 0, "-", "errors"], [8, 0, 0, "-", "examples"], [10, 0, 0, "-", "footprints"], [11, 0, 0, "-", "io_trans"], [12, 0, 0, "-", "itypes"], [13, 0, 0, "-", "key_path"], [14, 0, 0, "-", "multi_object"], [15, 0, 0, "-", "routing_forest"], [16, 0, 0, "-", "scrap"], [23, 0, 0, "-", "signatures"], [25, 0, 0, "-", "tests"], [33, 0, 0, "-", "util"], [34, 0, 0, "-", "wrapper"]], "i2._deprecated": [[2, 1, 1, "", "Command"], [2, 3, 1, "", "commands_dict"], [2, 3, 1, "", "extract_commands"]], "i2._deprecated.Command": [[2, 2, 1, "", "curried"]], "i2.base": [[3, 1, 1, "", "Mint"], [3, 1, 1, "", "MintOfCallable"], [3, 1, 1, "", "ParametersMint"]], "i2.base.Mint": [[3, 2, 1, "", "items"]], "i2.base.ParametersMint": [[3, 2, 1, "", "items"]], "i2.chain_map": [[4, 1, 1, "", "ChainMapTree"], [4, 3, 1, "", "is_iterable"], [4, 3, 1, "", "unique_iter"]], "i2.chain_map.ChainMapTree": [[4, 2, 1, "", "to_dict"]], "i2.deco": [[5, 1, 1, "", "FuncFactory"], [5, 4, 1, "", "OutputPostProcessingError"], [5, 3, 1, "", "add_method"], [5, 3, 1, "", "assert_attrs"], [5, 3, 1, "", "double_up_as_factory"], [5, 3, 1, "", "ensure_iterable_args"], [5, 3, 1, "", "get_callable_from_factory_if_no_arguments"], [5, 3, 1, "", "input_output_decorator"], [5, 3, 1, "", "kwargs_for_func"], [5, 3, 1, "", "mk_args_kwargs_merger"], [5, 3, 1, "", "mk_call_logger"], [5, 3, 1, "", "mk_method_trans_spec_from_methods_specs_dict"], [5, 3, 1, "", "postprocess"], [5, 3, 1, "", "preprocess_arguments"], [5, 3, 1, "", "transform_args"], [5, 3, 1, "", "wrap_class_methods"], [5, 3, 1, "", "wrap_class_methods_input_and_output"]], "i2.doc_mint": [[6, 1, 1, "", "DoctestBlock"], [6, 1, 1, "", "ExampleX"], [6, 3, 1, "", "doctest_string"], [6, 3, 1, "", "doctest_string_print"], [6, 3, 1, "", "non_doctest_lines"], [6, 3, 1, "", "old_doctest_string"], [6, 3, 1, "", "split_text_and_doctests"]], "i2.errors": [[7, 4, 1, "", "AuthorizationError"], [7, 4, 1, "", "DataError"], [7, 4, 1, "", "DuplicateRecordError"], [7, 4, 1, "", "ForbiddenError"], [7, 1, 1, "", "HandleExceptions"], [7, 4, 1, "", "InputError"], [7, 4, 1, "", "InterruptWithBlock"], [7, 1, 1, "", "ModuleNotFoundIgnore"], [7, 4, 1, "", "NotFoundError"], [7, 4, 1, "", "OverwritesNotAllowed"]], "i2.examples": [[9, 0, 0, "-", "signature_calculus"]], "i2.footprints": [[10, 1, 1, "", "Import"], [10, 1, 1, "", "MethodTrace"], [10, 1, 1, "", "Tracker"], [10, 3, 1, "", "attr_list"], [10, 3, 1, "", "attrs_used_by_method"], [10, 3, 1, "", "attrs_used_by_method_computation"], [10, 3, 1, "", "dict_to_graph"], [10, 3, 1, "", "get_class_that_defined_method"], [10, 3, 1, "", "get_imports_from_obj"], [10, 3, 1, "", "get_source"], [10, 3, 1, "", "list_func_calls"], [10, 3, 1, "", "start_tracking"], [10, 3, 1, "", "trace_class_decorator"]], "i2.footprints.Import": [[10, 5, 1, "", "alias"], [10, 5, 1, "", "module"], [10, 5, 1, "", "name"]], "i2.footprints.Tracker": [[10, 2, 1, "", "on_access"]], "i2.io_trans": [[11, 1, 1, "", "AnnotAndDfltIoTrans"], [11, 1, 1, "", "ArgnameIoTrans"], [11, 1, 1, "", "IoTrans"], [11, 1, 1, "", "JSONAnnotAndDfltIoTrans"], [11, 1, 1, "", "TypedBasedOutIoTrans"], [11, 3, 1, "", "cast_to_jdict"], [11, 3, 1, "", "cast_to_list"]], "i2.itypes": [[12, 1, 1, "", "HasAttrs"], [12, 3, 1, "", "input_and_output_types"], [12, 3, 1, "", "is_callable_kind"], [12, 3, 1, "", "iterable_to_literal"], [12, 3, 1, "", "new_type"], [12, 3, 1, "", "validate_literal"]], "i2.key_path": [[13, 1, 1, "", "KeyPathMap"], [13, 1, 1, "", "KeyPathTrans"], [13, 1, 1, "", "StrKeyPath"], [13, 3, 1, "", "flatten_dict"], [13, 3, 1, "", "obj_to_str_path"], [13, 3, 1, "", "rollout_dict"], [13, 3, 1, "", "str_path_to_obj"]], "i2.key_path.KeyPathMap": [[13, 2, 1, "", "items"]], "i2.key_path.KeyPathTrans": [[13, 2, 1, "", "extract_key_paths"], [13, 2, 1, "", "getitem"], [13, 2, 1, "", "items"], [13, 2, 1, "", "setitem"], [13, 2, 1, "", "setitem_recursive"]], "i2.key_path.StrKeyPath": [[13, 2, 1, "", "items"]], "i2.multi_object": [[14, 1, 1, "", "ContextFanout"], [14, 1, 1, "", "FlexFuncFanout"], [14, 1, 1, "", "FuncFanout"], [14, 1, 1, "", "MultiFunc"], [14, 1, 1, "", "MultiObj"], [14, 1, 1, "", "ParallelFuncs"], [14, 1, 1, "", "Pipe"], [14, 3, 1, "", "ensure_iterable_of_callables"], [14, 3, 1, "", "flatten_pipe"], [14, 3, 1, "", "merge_unnamed_and_named"], [14, 3, 1, "", "name_of_obj"], [14, 3, 1, "", "pipes_are_equal"], [14, 3, 1, "", "uniquely_named_objects"]], "i2.multi_object.MultiFunc": [[14, 6, 1, "", "funcs"]], "i2.multi_object.MultiObj": [[14, 2, 1, "", "auto_namer"]], "i2.routing_forest": [[15, 1, 1, "", "CondNode"], [15, 1, 1, "", "DelegateToMappingAttrMixin"], [15, 1, 1, "", "FeatCondNode"], [15, 1, 1, "", "FinalNode"], [15, 1, 1, "", "KeyFuncMapping"], [15, 1, 1, "", "RoutingForest"], [15, 1, 1, "", "RoutingNode"], [15, 1, 1, "", "SwitchCaseNode"], [15, 3, 1, "", "return_sentinel"]], "i2.routing_forest.FeatCondNode": [[15, 2, 1, "", "from_feature_val_map"]], "i2.routing_forest.KeyFuncMapping": [[15, 2, 1, "", "default_factory"]], "i2.routing_forest.RoutingNode": [[15, 2, 1, "", "from_object"]], "i2.scrap": [[17, 0, 0, "-", "scrap"], [18, 0, 0, "-", "scrap_ch_variadics"], [19, 0, 0, "-", "scrap_kwargs"], [20, 0, 0, "-", "signature_bops"], [21, 0, 0, "-", "simple_pymint"], [22, 0, 0, "-", "switch_case_tree"]], "i2.scrap.scrap": [[17, 1, 1, "", "Wrapx1"], [17, 1, 1, "", "Wrapx2"], [17, 3, 1, "", "default_caller"]], "i2.scrap.signature_bops": [[20, 3, 1, "", "keyed_comparator"]], "i2.scrap.simple_pymint": [[21, 3, 1, "", "mint_of_callable"]], "i2.scrap.switch_case_tree": [[22, 1, 1, "", "AttrMap"]], "i2.signatures": [[23, 4, 1, "", "FuncCallNotMatchingSignature"], [23, 4, 1, "", "IncompatibleSignatures"], [23, 1, 1, "", "MissingArgValFor"], [23, 5, 1, "", "P"], [23, 1, 1, "", "Param"], [23, 1, 1, "", "Sig"], [23, 3, 1, "", "all_pk_signature"], [23, 3, 1, "", "assure_params"], [23, 3, 1, "", "call_forgivingly"], [23, 3, 1, "", "call_somewhat_forgivingly"], [23, 3, 1, "", "ch_func_to_all_pk"], [23, 3, 1, "", "ch_signature_to_all_pk"], [23, 3, 1, "", "ch_variadics_to_non_variadic_kind"], [23, 3, 1, "", "common_and_diff_argnames"], [23, 3, 1, "", "copy_func"], [23, 3, 1, "", "dict_of_attribute_signatures"], [23, 3, 1, "", "ensure_params"], [23, 3, 1, "", "extract_arguments"], [23, 3, 1, "", "extract_arguments_asserting_no_remainder"], [23, 3, 1, "", "extract_arguments_ignoring_remainder"], [23, 3, 1, "", "has_signature"], [23, 3, 1, "", "insert_annotations"], [23, 3, 1, "", "is_call_compatible_with"], [23, 3, 1, "", "is_param_compatible_with"], [23, 3, 1, "", "keyed_comparator"], [23, 3, 1, "", "kind_forgiving_func"], [23, 3, 1, "", "mk_sig_from_args"], [23, 3, 1, "", "name_of_obj"], [23, 3, 1, "", "param_binary_func"], [23, 3, 1, "", "param_comparator"], [23, 3, 1, "", "param_for_kind"], [23, 3, 1, "", "resolve_function"], [23, 3, 1, "", "set_signature_of_func"], [23, 3, 1, "", "sig_to_dataclass"], [23, 3, 1, "", "sort_params"], [23, 3, 1, "", "tuple_the_args"], [23, 3, 1, "", "use_interface"]], "i2.signatures.Sig": [[23, 2, 1, "", "add_optional_keywords"], [23, 2, 1, "", "add_params"], [23, 6, 1, "", "annotations"], [23, 2, 1, "", "args_and_kwargs_from_kwargs"], [23, 2, 1, "", "ch_param_attrs"], [23, 6, 1, "", "defaults"], [23, 2, 1, "", "extract_args_and_kwargs"], [23, 2, 1, "", "extract_kwargs"], [23, 2, 1, "", "get_names"], [23, 6, 1, "", "has_var_keyword"], [23, 6, 1, "", "has_var_kinds"], [23, 6, 1, "", "has_var_positional"], [23, 6, 1, "", "index_of_var_keyword"], [23, 6, 1, "", "index_of_var_positional"], [23, 2, 1, "", "is_call_compatible_with"], [23, 2, 1, "", "kwargs_from_args_and_kwargs"], [23, 2, 1, "", "map_arguments"], [23, 2, 1, "", "map_arguments_from_variadics"], [23, 2, 1, "", "merge_with_sig"], [23, 2, 1, "", "mk_args_and_kwargs"], [23, 2, 1, "", "modified"], [23, 6, 1, "", "n_required"], [23, 2, 1, "", "names_for_kind"], [23, 6, 1, "", "params"], [23, 6, 1, "", "required_names"], [23, 2, 1, "", "sig_or_default"], [23, 2, 1, "", "sig_or_none"], [23, 2, 1, "", "sort_params"], [23, 2, 1, "", "source_args_and_kwargs"], [23, 2, 1, "", "source_arguments"], [23, 2, 1, "", "source_kwargs"], [23, 2, 1, "", "to_signature_kwargs"], [23, 2, 1, "", "to_simple_signature"], [23, 6, 1, "", "with_defaults"], [23, 6, 1, "", "without_defaults"], [23, 2, 1, "", "wrap"]], "i2.tests": [[26, 0, 0, "-", "footprints_test"], [27, 0, 0, "-", "objects_for_testing"], [29, 0, 0, "-", "test_util"], [30, 0, 0, "-", "test_wrapper"], [31, 0, 0, "-", "util"]], "i2.tests.objects_for_testing": [[27, 3, 1, "", "add"], [27, 3, 1, "", "f"], [27, 3, 1, "", "formula1"], [27, 3, 1, "", "formula2"], [27, 3, 1, "", "sum_of_args"], [27, 3, 1, "", "test_func_1"], [27, 3, 1, "", "test_func_2"]], "i2.tests.test_wrapper": [[30, 3, 1, "", "simple_chunker"]], "i2.tests.util": [[31, 3, 1, "", "builtin_signatureless_callables"], [31, 3, 1, "", "function_is_compatible_with_signature"], [31, 3, 1, "", "generate_params"], [31, 3, 1, "", "inject_defaults"], [31, 3, 1, "", "mk_func_from_params"], [31, 3, 1, "", "params_to_arg_name_and_val"], [31, 3, 1, "", "sig_to_func"], [31, 3, 1, "", "sig_to_inputs"]], "i2.util": [[33, 4, 1, "", "ExistingArgument"], [33, 3, 1, "", "FileLikeObject"], [33, 1, 1, "", "FrozenDict"], [33, 4, 1, "", "FrozenHashError"], [33, 1, 1, "", "FunctionBuilder"], [33, 1, 1, "", "LiteralVal"], [33, 4, 1, "", "MissingArgument"], [33, 1, 1, "", "Namespace"], [33, 4, 1, "", "OverwritesForbidden"], [33, 1, 1, "", "PicklableLambda"], [33, 3, 1, "", "copy_func"], [33, 3, 1, "", "dp_get"], [33, 3, 1, "", "ensure_identifiers"], [33, 5, 1, "", "frozendict"], [33, 3, 1, "", "get_app_data_folder"], [33, 1, 1, "", "imdict"], [33, 3, 1, "", "inject_method"], [33, 3, 1, "", "insert_name_based_objects_in_scope"], [33, 3, 1, "", "inspect_formatargspec"], [33, 3, 1, "", "lambda_code"], [33, 1, 1, "", "lazyprop"], [33, 3, 1, "", "mk_sentinel"], [33, 3, 1, "", "path_extractor"]], "i2.util.FrozenDict": [[33, 2, 1, "", "clear"], [33, 2, 1, "", "fromkeys"], [33, 2, 1, "", "pop"], [33, 2, 1, "", "popitem"], [33, 2, 1, "", "setdefault"], [33, 2, 1, "", "update"], [33, 2, 1, "", "updated"]], "i2.util.FunctionBuilder": [[33, 2, 1, "", "add_arg"], [33, 2, 1, "", "from_func"], [33, 2, 1, "", "get_defaults_dict"], [33, 2, 1, "", "get_func"], [33, 2, 1, "", "get_sig_str"], [33, 2, 1, "", "remove_arg"]], "i2.util.LiteralVal": [[33, 2, 1, "", "get_val"]], "i2.util.imdict": [[33, 2, 1, "", "clear"], [33, 2, 1, "", "pop"], [33, 2, 1, "", "popitem"], [33, 2, 1, "", "setdefault"], [33, 2, 1, "", "update"]], "i2.wrapper": [[34, 4, 1, "", "CallerValidationError"], [34, 4, 1, "", "EgressValidationError"], [34, 1, 1, "", "Ingress"], [34, 4, 1, "", "IngressValidationError"], [34, 1, 1, "", "InnerMapIngress"], [34, 1, 1, "", "MakeFromFunc"], [34, 1, 1, "", "SmartDefault"], [34, 1, 1, "", "Wrap"], [34, 4, 1, "", "WrapperValidationError"], [34, 1, 1, "", "Wrapx"], [34, 3, 1, "", "append_empty_args"], [34, 3, 1, "", "bind_funcs_object_attrs"], [34, 3, 1, "", "bind_funcs_object_attrs_old"], [34, 3, 1, "", "camelize"], [34, 3, 1, "", "complete_dict_applying_functions"], [34, 3, 1, "", "func_to_method_func"], [34, 3, 1, "", "identity"], [34, 3, 1, "", "include_exclude_ingress_factory"], [34, 3, 1, "", "items_with_mapped_keys"], [34, 3, 1, "", "kwargs_trans"], [34, 3, 1, "", "move_names_to_the_end"], [34, 3, 1, "", "move_params_to_the_end"], [34, 3, 1, "", "partialx"], [34, 3, 1, "", "transparent_egress"], [34, 3, 1, "", "transparent_ingress"]], "i2.wrapper.Ingress": [[34, 2, 1, "", "name_map"], [34, 2, 1, "", "wrap"]], "i2.wrapper.InnerMapIngress": [[34, 2, 1, "", "from_signature"]], "i2.wrapper.SmartDefault": [[34, 5, 1, "", "original_default"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:exception", "5": "py:attribute", "6": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "exception", "Python exception"], "5": ["py", "attribute", "Python attribute"], "6": ["py", "property", "Python property"]}, "titleterms": {"welcom": 0, "i2": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34], "": 0, "document": 0, "content": [0, 35], "indic": 0, "tabl": 0, "_deprec": 2, "base": 3, "chain_map": 4, "deco": 5, "doc_mint": 6, "error": 7, "exampl": [8, 9], "signature_calculu": 9, "footprint": 10, "io_tran": 11, "ityp": 12, "key_path": 13, "multi_object": 14, "routing_forest": 15, "scrap": [16, 17, 18, 19, 20, 21, 22], "scrap_ch_variad": 18, "scrap_kwarg": 19, "signature_bop": 20, "simple_pymint": 21, "switch_case_tre": [22, 24], "signatur": 23, "test": [25, 26, 27, 28, 29, 30, 31, 32], "footprints_test": 26, "objects_for_test": 27, "signatures_test": 28, "test_util": 29, "test_wrapp": 30, "util": [31, 33], "wrapper_test": 32, "wrapper": 34}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"Welcome to i2\u2019s documentation!": [[0, "welcome-to-i2-s-documentation"]], "Contents:": [[0, null], [35, null]], "Indices and tables": [[0, "indices-and-tables"]], "i2": [[1, "module-i2"]], "i2._deprecated": [[2, "module-i2._deprecated"]], "i2.base": [[3, "module-i2.base"]], "i2.chain_map": [[4, "module-i2.chain_map"]], "i2.deco": [[5, "module-i2.deco"]], "i2.doc_mint": [[6, "module-i2.doc_mint"]], "i2.errors": [[7, "module-i2.errors"]], "i2.examples": [[8, "module-i2.examples"]], "i2.examples.signature_calculus": [[9, "module-i2.examples.signature_calculus"]], "i2.footprints": [[10, "module-i2.footprints"]], "i2.io_trans": [[11, "module-i2.io_trans"]], "i2.itypes": [[12, "module-i2.itypes"]], "i2.key_path": [[13, "module-i2.key_path"]], "i2.multi_object": [[14, "module-i2.multi_object"]], "i2.routing_forest": [[15, "module-i2.routing_forest"]], "i2.scrap": [[16, "module-i2.scrap"]], "i2.scrap.scrap": [[17, "module-i2.scrap.scrap"]], "i2.scrap.scrap_ch_variadics": [[18, "module-i2.scrap.scrap_ch_variadics"]], "i2.scrap.scrap_kwargs": [[19, "module-i2.scrap.scrap_kwargs"]], "i2.scrap.signature_bops": [[20, "module-i2.scrap.signature_bops"]], "i2.scrap.simple_pymint": [[21, "module-i2.scrap.simple_pymint"]], "i2.scrap.switch_case_tree": [[22, "module-i2.scrap.switch_case_tree"]], "i2.signatures": [[23, "module-i2.signatures"]], "i2.switch_case_tree": [[24, "i2-switch-case-tree"]], "i2.tests": [[25, "module-i2.tests"]], "i2.tests.footprints_test": [[26, "module-i2.tests.footprints_test"]], "i2.tests.objects_for_testing": [[27, "module-i2.tests.objects_for_testing"]], "i2.tests.signatures_test": [[28, "i2-tests-signatures-test"]], "i2.tests.test_util": [[29, "module-i2.tests.test_util"]], "i2.tests.test_wrapper": [[30, "module-i2.tests.test_wrapper"]], "i2.tests.util": [[31, "module-i2.tests.util"]], "i2.tests.wrapper_test": [[32, "i2-tests-wrapper-test"]], "i2.util": [[33, "module-i2.util"]], "i2.wrapper": [[34, "module-i2.wrapper"]]}, "indexentries": {"i2": [[1, "module-i2"]], "module": [[1, "module-i2"], [2, "module-i2._deprecated"], [3, "module-i2.base"], [4, "module-i2.chain_map"], [5, "module-i2.deco"], [6, "module-i2.doc_mint"], [7, "module-i2.errors"], [8, "module-i2.examples"], [9, "module-i2.examples.signature_calculus"], [10, "module-i2.footprints"], [11, "module-i2.io_trans"], [12, "module-i2.itypes"], [13, "module-i2.key_path"], [14, "module-i2.multi_object"], [15, "module-i2.routing_forest"], [16, "module-i2.scrap"], [17, "module-i2.scrap.scrap"], [18, "module-i2.scrap.scrap_ch_variadics"], [19, "module-i2.scrap.scrap_kwargs"], [20, "module-i2.scrap.signature_bops"], [21, "module-i2.scrap.simple_pymint"], [22, "module-i2.scrap.switch_case_tree"], [23, "module-i2.signatures"], [25, "module-i2.tests"], [26, "module-i2.tests.footprints_test"], [27, "module-i2.tests.objects_for_testing"], [29, "module-i2.tests.test_util"], [30, "module-i2.tests.test_wrapper"], [31, "module-i2.tests.util"], [33, "module-i2.util"], [34, "module-i2.wrapper"]], "command (class in i2._deprecated)": [[2, "i2._deprecated.Command"]], "commands_dict() (in module i2._deprecated)": [[2, "i2._deprecated.commands_dict"]], "curried() (i2._deprecated.command class method)": [[2, "i2._deprecated.Command.curried"]], "extract_commands() (in module i2._deprecated)": [[2, "i2._deprecated.extract_commands"]], "i2._deprecated": [[2, "module-i2._deprecated"]], "mint (class in i2.base)": [[3, "i2.base.Mint"]], "mintofcallable (class in i2.base)": [[3, "i2.base.MintOfCallable"]], "parametersmint (class in i2.base)": [[3, "i2.base.ParametersMint"]], "i2.base": [[3, "module-i2.base"]], "items() (i2.base.mint method)": [[3, "i2.base.Mint.items"]], "items() (i2.base.parametersmint method)": [[3, "i2.base.ParametersMint.items"]], "chainmaptree (class in i2.chain_map)": [[4, "i2.chain_map.ChainMapTree"]], "i2.chain_map": [[4, "module-i2.chain_map"]], "is_iterable() (in module i2.chain_map)": [[4, "i2.chain_map.is_iterable"]], "to_dict() (i2.chain_map.chainmaptree method)": [[4, "i2.chain_map.ChainMapTree.to_dict"]], "unique_iter() (in module i2.chain_map)": [[4, "i2.chain_map.unique_iter"]], "funcfactory (class in i2.deco)": [[5, "i2.deco.FuncFactory"]], "outputpostprocessingerror": [[5, "i2.deco.OutputPostProcessingError"]], "add_method() (in module i2.deco)": [[5, "i2.deco.add_method"]], "assert_attrs() (in module i2.deco)": [[5, "i2.deco.assert_attrs"]], "double_up_as_factory() (in module i2.deco)": [[5, "i2.deco.double_up_as_factory"]], "ensure_iterable_args() (in module i2.deco)": [[5, "i2.deco.ensure_iterable_args"]], "get_callable_from_factory_if_no_arguments() (in module i2.deco)": [[5, "i2.deco.get_callable_from_factory_if_no_arguments"]], "i2.deco": [[5, "module-i2.deco"]], "input_output_decorator() (in module i2.deco)": [[5, "i2.deco.input_output_decorator"]], "kwargs_for_func() (in module i2.deco)": [[5, "i2.deco.kwargs_for_func"]], "mk_args_kwargs_merger() (in module i2.deco)": [[5, "i2.deco.mk_args_kwargs_merger"]], "mk_call_logger() (in module i2.deco)": [[5, "i2.deco.mk_call_logger"]], "mk_method_trans_spec_from_methods_specs_dict() (in module i2.deco)": [[5, "i2.deco.mk_method_trans_spec_from_methods_specs_dict"]], "postprocess() (in module i2.deco)": [[5, "i2.deco.postprocess"]], "preprocess_arguments() (in module i2.deco)": [[5, "i2.deco.preprocess_arguments"]], "transform_args() (in module i2.deco)": [[5, "i2.deco.transform_args"]], "wrap_class_methods() (in module i2.deco)": [[5, "i2.deco.wrap_class_methods"]], "wrap_class_methods_input_and_output() (in module i2.deco)": [[5, "i2.deco.wrap_class_methods_input_and_output"]], "doctestblock (class in i2.doc_mint)": [[6, "i2.doc_mint.DoctestBlock"]], "examplex (class in i2.doc_mint)": [[6, "i2.doc_mint.ExampleX"]], "doctest_string() (in module i2.doc_mint)": [[6, "i2.doc_mint.doctest_string"]], "doctest_string_print() (in module i2.doc_mint)": [[6, "i2.doc_mint.doctest_string_print"]], "i2.doc_mint": [[6, "module-i2.doc_mint"]], "non_doctest_lines() (in module i2.doc_mint)": [[6, "i2.doc_mint.non_doctest_lines"]], "old_doctest_string() (in module i2.doc_mint)": [[6, "i2.doc_mint.old_doctest_string"]], "split_text_and_doctests() (in module i2.doc_mint)": [[6, "i2.doc_mint.split_text_and_doctests"]], "authorizationerror": [[7, "i2.errors.AuthorizationError"]], "dataerror": [[7, "i2.errors.DataError"]], "duplicaterecorderror": [[7, "i2.errors.DuplicateRecordError"]], "forbiddenerror": [[7, "i2.errors.ForbiddenError"]], "handleexceptions (class in i2.errors)": [[7, "i2.errors.HandleExceptions"]], "inputerror": [[7, "i2.errors.InputError"]], "interruptwithblock": [[7, "i2.errors.InterruptWithBlock"]], "modulenotfoundignore (class in i2.errors)": [[7, "i2.errors.ModuleNotFoundIgnore"]], "notfounderror": [[7, "i2.errors.NotFoundError"]], "overwritesnotallowed": [[7, "i2.errors.OverwritesNotAllowed"]], "i2.errors": [[7, "module-i2.errors"]], "i2.examples": [[8, "module-i2.examples"]], "i2.examples.signature_calculus": [[9, "module-i2.examples.signature_calculus"]], "import (class in i2.footprints)": [[10, "i2.footprints.Import"]], "methodtrace (class in i2.footprints)": [[10, "i2.footprints.MethodTrace"]], "tracker (class in i2.footprints)": [[10, "i2.footprints.Tracker"]], "alias (i2.footprints.import attribute)": [[10, "i2.footprints.Import.alias"]], "attr_list() (in module i2.footprints)": [[10, "i2.footprints.attr_list"]], "attrs_used_by_method() (in module i2.footprints)": [[10, "i2.footprints.attrs_used_by_method"]], "attrs_used_by_method_computation() (in module i2.footprints)": [[10, "i2.footprints.attrs_used_by_method_computation"]], "dict_to_graph() (in module i2.footprints)": [[10, "i2.footprints.dict_to_graph"]], "get_class_that_defined_method() (in module i2.footprints)": [[10, "i2.footprints.get_class_that_defined_method"]], "get_imports_from_obj() (in module i2.footprints)": [[10, "i2.footprints.get_imports_from_obj"]], "get_source() (in module i2.footprints)": [[10, "i2.footprints.get_source"]], "i2.footprints": [[10, "module-i2.footprints"]], "list_func_calls() (in module i2.footprints)": [[10, "i2.footprints.list_func_calls"]], "module (i2.footprints.import attribute)": [[10, "i2.footprints.Import.module"]], "name (i2.footprints.import attribute)": [[10, "i2.footprints.Import.name"]], "on_access() (i2.footprints.tracker method)": [[10, "i2.footprints.Tracker.on_access"]], "start_tracking() (in module i2.footprints)": [[10, "i2.footprints.start_tracking"]], "trace_class_decorator() (in module i2.footprints)": [[10, "i2.footprints.trace_class_decorator"]], "annotanddfltiotrans (class in i2.io_trans)": [[11, "i2.io_trans.AnnotAndDfltIoTrans"]], "argnameiotrans (class in i2.io_trans)": [[11, "i2.io_trans.ArgnameIoTrans"]], "iotrans (class in i2.io_trans)": [[11, "i2.io_trans.IoTrans"]], "jsonannotanddfltiotrans (class in i2.io_trans)": [[11, "i2.io_trans.JSONAnnotAndDfltIoTrans"]], "typedbasedoutiotrans (class in i2.io_trans)": [[11, "i2.io_trans.TypedBasedOutIoTrans"]], "cast_to_jdict() (in module i2.io_trans)": [[11, "i2.io_trans.cast_to_jdict"]], "cast_to_list() (in module i2.io_trans)": [[11, "i2.io_trans.cast_to_list"]], "i2.io_trans": [[11, "module-i2.io_trans"]], "hasattrs (class in i2.itypes)": [[12, "i2.itypes.HasAttrs"]], "i2.itypes": [[12, "module-i2.itypes"]], "input_and_output_types() (in module i2.itypes)": [[12, "i2.itypes.input_and_output_types"]], "is_callable_kind() (in module i2.itypes)": [[12, "i2.itypes.is_callable_kind"]], "iterable_to_literal() (in module i2.itypes)": [[12, "i2.itypes.iterable_to_literal"]], "new_type() (in module i2.itypes)": [[12, "i2.itypes.new_type"]], "validate_literal() (in module i2.itypes)": [[12, "i2.itypes.validate_literal"]], "keypathmap (class in i2.key_path)": [[13, "i2.key_path.KeyPathMap"]], "keypathtrans (class in i2.key_path)": [[13, "i2.key_path.KeyPathTrans"]], "strkeypath (class in i2.key_path)": [[13, "i2.key_path.StrKeyPath"]], "extract_key_paths() (i2.key_path.keypathtrans method)": [[13, "i2.key_path.KeyPathTrans.extract_key_paths"]], "flatten_dict() (in module i2.key_path)": [[13, "i2.key_path.flatten_dict"]], "getitem() (i2.key_path.keypathtrans method)": [[13, "i2.key_path.KeyPathTrans.getitem"]], "i2.key_path": [[13, "module-i2.key_path"]], "items() (i2.key_path.keypathmap method)": [[13, "i2.key_path.KeyPathMap.items"]], "items() (i2.key_path.keypathtrans method)": [[13, "i2.key_path.KeyPathTrans.items"]], "items() (i2.key_path.strkeypath method)": [[13, "i2.key_path.StrKeyPath.items"]], "obj_to_str_path() (in module i2.key_path)": [[13, "i2.key_path.obj_to_str_path"]], "rollout_dict() (in module i2.key_path)": [[13, "i2.key_path.rollout_dict"]], "setitem() (i2.key_path.keypathtrans method)": [[13, "i2.key_path.KeyPathTrans.setitem"]], "setitem_recursive() (i2.key_path.keypathtrans method)": [[13, "i2.key_path.KeyPathTrans.setitem_recursive"]], "str_path_to_obj() (in module i2.key_path)": [[13, "i2.key_path.str_path_to_obj"]], "contextfanout (class in i2.multi_object)": [[14, "i2.multi_object.ContextFanout"]], "flexfuncfanout (class in i2.multi_object)": [[14, "i2.multi_object.FlexFuncFanout"]], "funcfanout (class in i2.multi_object)": [[14, "i2.multi_object.FuncFanout"]], "multifunc (class in i2.multi_object)": [[14, "i2.multi_object.MultiFunc"]], "multiobj (class in i2.multi_object)": [[14, "i2.multi_object.MultiObj"]], "parallelfuncs (class in i2.multi_object)": [[14, "i2.multi_object.ParallelFuncs"]], "pipe (class in i2.multi_object)": [[14, "i2.multi_object.Pipe"]], "auto_namer() (i2.multi_object.multiobj static method)": [[14, "i2.multi_object.MultiObj.auto_namer"]], "ensure_iterable_of_callables() (in module i2.multi_object)": [[14, "i2.multi_object.ensure_iterable_of_callables"]], "flatten_pipe() (in module i2.multi_object)": [[14, "i2.multi_object.flatten_pipe"]], "funcs (i2.multi_object.multifunc property)": [[14, "i2.multi_object.MultiFunc.funcs"]], "i2.multi_object": [[14, "module-i2.multi_object"]], "merge_unnamed_and_named() (in module i2.multi_object)": [[14, "i2.multi_object.merge_unnamed_and_named"]], "name_of_obj() (in module i2.multi_object)": [[14, "i2.multi_object.name_of_obj"]], "pipes_are_equal() (in module i2.multi_object)": [[14, "i2.multi_object.pipes_are_equal"]], "uniquely_named_objects() (in module i2.multi_object)": [[14, "i2.multi_object.uniquely_named_objects"]], "condnode (class in i2.routing_forest)": [[15, "i2.routing_forest.CondNode"]], "delegatetomappingattrmixin (class in i2.routing_forest)": [[15, "i2.routing_forest.DelegateToMappingAttrMixin"]], "featcondnode (class in i2.routing_forest)": [[15, "i2.routing_forest.FeatCondNode"]], "finalnode (class in i2.routing_forest)": [[15, "i2.routing_forest.FinalNode"]], "keyfuncmapping (class in i2.routing_forest)": [[15, "i2.routing_forest.KeyFuncMapping"]], "routingforest (class in i2.routing_forest)": [[15, "i2.routing_forest.RoutingForest"]], "routingnode (class in i2.routing_forest)": [[15, "i2.routing_forest.RoutingNode"]], "switchcasenode (class in i2.routing_forest)": [[15, "i2.routing_forest.SwitchCaseNode"]], "default_factory() (i2.routing_forest.keyfuncmapping method)": [[15, "i2.routing_forest.KeyFuncMapping.default_factory"]], "from_feature_val_map() (i2.routing_forest.featcondnode class method)": [[15, "i2.routing_forest.FeatCondNode.from_feature_val_map"]], "from_object() (i2.routing_forest.routingnode static method)": [[15, "i2.routing_forest.RoutingNode.from_object"]], "i2.routing_forest": [[15, "module-i2.routing_forest"]], "return_sentinel() (in module i2.routing_forest)": [[15, "i2.routing_forest.return_sentinel"]], "i2.scrap": [[16, "module-i2.scrap"]], "wrapx1 (class in i2.scrap.scrap)": [[17, "i2.scrap.scrap.Wrapx1"]], "wrapx2 (class in i2.scrap.scrap)": [[17, "i2.scrap.scrap.Wrapx2"]], "default_caller() (in module i2.scrap.scrap)": [[17, "i2.scrap.scrap.default_caller"]], "i2.scrap.scrap": [[17, "module-i2.scrap.scrap"]], "i2.scrap.scrap_ch_variadics": [[18, "module-i2.scrap.scrap_ch_variadics"]], "i2.scrap.scrap_kwargs": [[19, "module-i2.scrap.scrap_kwargs"]], "i2.scrap.signature_bops": [[20, "module-i2.scrap.signature_bops"]], "keyed_comparator() (in module i2.scrap.signature_bops)": [[20, "i2.scrap.signature_bops.keyed_comparator"]], "i2.scrap.simple_pymint": [[21, "module-i2.scrap.simple_pymint"]], "mint_of_callable() (in module i2.scrap.simple_pymint)": [[21, "i2.scrap.simple_pymint.mint_of_callable"]], "attrmap (class in i2.scrap.switch_case_tree)": [[22, "i2.scrap.switch_case_tree.AttrMap"]], "i2.scrap.switch_case_tree": [[22, "module-i2.scrap.switch_case_tree"]], "funccallnotmatchingsignature": [[23, "i2.signatures.FuncCallNotMatchingSignature"]], "incompatiblesignatures": [[23, "i2.signatures.IncompatibleSignatures"]], "missingargvalfor (class in i2.signatures)": [[23, "i2.signatures.MissingArgValFor"]], "p (in module i2.signatures)": [[23, "i2.signatures.P"]], "param (class in i2.signatures)": [[23, "i2.signatures.Param"]], "sig (class in i2.signatures)": [[23, "i2.signatures.Sig"]], "add_optional_keywords() (i2.signatures.sig method)": [[23, "i2.signatures.Sig.add_optional_keywords"]], "add_params() (i2.signatures.sig method)": [[23, "i2.signatures.Sig.add_params"]], "all_pk_signature() (in module i2.signatures)": [[23, "i2.signatures.all_pk_signature"]], "annotations (i2.signatures.sig property)": [[23, "i2.signatures.Sig.annotations"]], "args_and_kwargs_from_kwargs() (i2.signatures.sig method)": [[23, "i2.signatures.Sig.args_and_kwargs_from_kwargs"]], "assure_params() (in module i2.signatures)": [[23, "i2.signatures.assure_params"]], "call_forgivingly() (in module i2.signatures)": [[23, "i2.signatures.call_forgivingly"]], "call_somewhat_forgivingly() (in module i2.signatures)": [[23, "i2.signatures.call_somewhat_forgivingly"]], "ch_func_to_all_pk() (in module i2.signatures)": [[23, "i2.signatures.ch_func_to_all_pk"]], "ch_param_attrs() (i2.signatures.sig method)": [[23, "i2.signatures.Sig.ch_param_attrs"]], "ch_signature_to_all_pk() (in module i2.signatures)": [[23, "i2.signatures.ch_signature_to_all_pk"]], "ch_variadics_to_non_variadic_kind() (in module i2.signatures)": [[23, "i2.signatures.ch_variadics_to_non_variadic_kind"]], "common_and_diff_argnames() (in module i2.signatures)": [[23, "i2.signatures.common_and_diff_argnames"]], "copy_func() (in module i2.signatures)": [[23, "i2.signatures.copy_func"]], "defaults (i2.signatures.sig property)": [[23, "i2.signatures.Sig.defaults"]], "dict_of_attribute_signatures() (in module i2.signatures)": [[23, "i2.signatures.dict_of_attribute_signatures"]], "ensure_params() (in module i2.signatures)": [[23, "i2.signatures.ensure_params"]], "extract_args_and_kwargs() (i2.signatures.sig method)": [[23, "i2.signatures.Sig.extract_args_and_kwargs"]], "extract_arguments() (in module i2.signatures)": [[23, "i2.signatures.extract_arguments"]], "extract_arguments_asserting_no_remainder() (in module i2.signatures)": [[23, "i2.signatures.extract_arguments_asserting_no_remainder"]], "extract_arguments_ignoring_remainder() (in module i2.signatures)": [[23, "i2.signatures.extract_arguments_ignoring_remainder"]], "extract_kwargs() (i2.signatures.sig method)": [[23, "i2.signatures.Sig.extract_kwargs"]], "get_names() (i2.signatures.sig method)": [[23, "i2.signatures.Sig.get_names"]], "has_signature() (in module i2.signatures)": [[23, "i2.signatures.has_signature"]], "has_var_keyword (i2.signatures.sig property)": [[23, "i2.signatures.Sig.has_var_keyword"]], "has_var_kinds (i2.signatures.sig property)": [[23, "i2.signatures.Sig.has_var_kinds"]], "has_var_positional (i2.signatures.sig property)": [[23, "i2.signatures.Sig.has_var_positional"]], "i2.signatures": [[23, "module-i2.signatures"]], "index_of_var_keyword (i2.signatures.sig property)": [[23, "i2.signatures.Sig.index_of_var_keyword"]], "index_of_var_positional (i2.signatures.sig property)": [[23, "i2.signatures.Sig.index_of_var_positional"]], "insert_annotations() (in module i2.signatures)": [[23, "i2.signatures.insert_annotations"]], "is_call_compatible_with() (i2.signatures.sig method)": [[23, "i2.signatures.Sig.is_call_compatible_with"]], "is_call_compatible_with() (in module i2.signatures)": [[23, "i2.signatures.is_call_compatible_with"]], "is_param_compatible_with() (in module i2.signatures)": [[23, "i2.signatures.is_param_compatible_with"]], "keyed_comparator() (in module i2.signatures)": [[23, "i2.signatures.keyed_comparator"]], "kind_forgiving_func() (in module i2.signatures)": [[23, "i2.signatures.kind_forgiving_func"]], "kwargs_from_args_and_kwargs() (i2.signatures.sig method)": [[23, "i2.signatures.Sig.kwargs_from_args_and_kwargs"]], "map_arguments() (i2.signatures.sig method)": [[23, "i2.signatures.Sig.map_arguments"]], "map_arguments_from_variadics() (i2.signatures.sig method)": [[23, "i2.signatures.Sig.map_arguments_from_variadics"]], "merge_with_sig() (i2.signatures.sig method)": [[23, "i2.signatures.Sig.merge_with_sig"]], "mk_args_and_kwargs() (i2.signatures.sig method)": [[23, "i2.signatures.Sig.mk_args_and_kwargs"]], "mk_sig_from_args() (in module i2.signatures)": [[23, "i2.signatures.mk_sig_from_args"]], "modified() (i2.signatures.sig method)": [[23, "i2.signatures.Sig.modified"]], "n_required (i2.signatures.sig property)": [[23, "i2.signatures.Sig.n_required"]], "name_of_obj() (in module i2.signatures)": [[23, "i2.signatures.name_of_obj"]], "names_for_kind() (i2.signatures.sig method)": [[23, "i2.signatures.Sig.names_for_kind"]], "param_binary_func() (in module i2.signatures)": [[23, "i2.signatures.param_binary_func"]], "param_comparator() (in module i2.signatures)": [[23, "i2.signatures.param_comparator"]], "param_for_kind() (in module i2.signatures)": [[23, "i2.signatures.param_for_kind"]], "params (i2.signatures.sig property)": [[23, "i2.signatures.Sig.params"]], "required_names (i2.signatures.sig property)": [[23, "i2.signatures.Sig.required_names"]], "resolve_function() (in module i2.signatures)": [[23, "i2.signatures.resolve_function"]], "set_signature_of_func() (in module i2.signatures)": [[23, "i2.signatures.set_signature_of_func"]], "sig_or_default() (i2.signatures.sig class method)": [[23, "i2.signatures.Sig.sig_or_default"]], "sig_or_none() (i2.signatures.sig class method)": [[23, "i2.signatures.Sig.sig_or_none"]], "sig_to_dataclass() (in module i2.signatures)": [[23, "i2.signatures.sig_to_dataclass"]], "sort_params() (i2.signatures.sig method)": [[23, "i2.signatures.Sig.sort_params"]], "sort_params() (in module i2.signatures)": [[23, "i2.signatures.sort_params"]], "source_args_and_kwargs() (i2.signatures.sig method)": [[23, "i2.signatures.Sig.source_args_and_kwargs"]], "source_arguments() (i2.signatures.sig method)": [[23, "i2.signatures.Sig.source_arguments"]], "source_kwargs() (i2.signatures.sig method)": [[23, "i2.signatures.Sig.source_kwargs"]], "to_signature_kwargs() (i2.signatures.sig method)": [[23, "i2.signatures.Sig.to_signature_kwargs"]], "to_simple_signature() (i2.signatures.sig method)": [[23, "i2.signatures.Sig.to_simple_signature"]], "tuple_the_args() (in module i2.signatures)": [[23, "i2.signatures.tuple_the_args"]], "use_interface() (in module i2.signatures)": [[23, "i2.signatures.use_interface"]], "with_defaults (i2.signatures.sig property)": [[23, "i2.signatures.Sig.with_defaults"]], "without_defaults (i2.signatures.sig property)": [[23, "i2.signatures.Sig.without_defaults"]], "wrap() (i2.signatures.sig method)": [[23, "i2.signatures.Sig.wrap"]], "i2.tests": [[25, "module-i2.tests"]], "i2.tests.footprints_test": [[26, "module-i2.tests.footprints_test"]], "add() (in module i2.tests.objects_for_testing)": [[27, "i2.tests.objects_for_testing.add"]], "f() (in module i2.tests.objects_for_testing)": [[27, "i2.tests.objects_for_testing.f"]], "formula1() (in module i2.tests.objects_for_testing)": [[27, "i2.tests.objects_for_testing.formula1"]], "formula2() (in module i2.tests.objects_for_testing)": [[27, "i2.tests.objects_for_testing.formula2"]], "i2.tests.objects_for_testing": [[27, "module-i2.tests.objects_for_testing"]], "sum_of_args() (in module i2.tests.objects_for_testing)": [[27, "i2.tests.objects_for_testing.sum_of_args"]], "test_func_1() (in module i2.tests.objects_for_testing)": [[27, "i2.tests.objects_for_testing.test_func_1"]], "test_func_2() (in module i2.tests.objects_for_testing)": [[27, "i2.tests.objects_for_testing.test_func_2"]], "i2.tests.test_util": [[29, "module-i2.tests.test_util"]], "i2.tests.test_wrapper": [[30, "module-i2.tests.test_wrapper"]], "simple_chunker() (in module i2.tests.test_wrapper)": [[30, "i2.tests.test_wrapper.simple_chunker"]], "builtin_signatureless_callables() (in module i2.tests.util)": [[31, "i2.tests.util.builtin_signatureless_callables"]], "function_is_compatible_with_signature() (in module i2.tests.util)": [[31, "i2.tests.util.function_is_compatible_with_signature"]], "generate_params() (in module i2.tests.util)": [[31, "i2.tests.util.generate_params"]], "i2.tests.util": [[31, "module-i2.tests.util"]], "inject_defaults() (in module i2.tests.util)": [[31, "i2.tests.util.inject_defaults"]], "mk_func_from_params() (in module i2.tests.util)": [[31, "i2.tests.util.mk_func_from_params"]], "params_to_arg_name_and_val() (in module i2.tests.util)": [[31, "i2.tests.util.params_to_arg_name_and_val"]], "sig_to_func() (in module i2.tests.util)": [[31, "i2.tests.util.sig_to_func"]], "sig_to_inputs() (in module i2.tests.util)": [[31, "i2.tests.util.sig_to_inputs"]], "existingargument": [[33, "i2.util.ExistingArgument"]], "filelikeobject() (in module i2.util)": [[33, "i2.util.FileLikeObject"]], "frozendict (class in i2.util)": [[33, "i2.util.FrozenDict"]], "frozenhasherror": [[33, "i2.util.FrozenHashError"]], "functionbuilder (class in i2.util)": [[33, "i2.util.FunctionBuilder"]], "literalval (class in i2.util)": [[33, "i2.util.LiteralVal"]], "missingargument": [[33, "i2.util.MissingArgument"]], "namespace (class in i2.util)": [[33, "i2.util.Namespace"]], "overwritesforbidden": [[33, "i2.util.OverwritesForbidden"]], "picklablelambda (class in i2.util)": [[33, "i2.util.PicklableLambda"]], "add_arg() (i2.util.functionbuilder method)": [[33, "i2.util.FunctionBuilder.add_arg"]], "clear() (i2.util.frozendict method)": [[33, "i2.util.FrozenDict.clear"]], "clear() (i2.util.imdict method)": [[33, "i2.util.imdict.clear"]], "copy_func() (in module i2.util)": [[33, "i2.util.copy_func"]], "dp_get() (in module i2.util)": [[33, "i2.util.dp_get"]], "ensure_identifiers() (in module i2.util)": [[33, "i2.util.ensure_identifiers"]], "from_func() (i2.util.functionbuilder class method)": [[33, "i2.util.FunctionBuilder.from_func"]], "fromkeys() (i2.util.frozendict class method)": [[33, "i2.util.FrozenDict.fromkeys"]], "frozendict (in module i2.util)": [[33, "i2.util.frozendict"]], "get_app_data_folder() (in module i2.util)": [[33, "i2.util.get_app_data_folder"]], "get_defaults_dict() (i2.util.functionbuilder method)": [[33, "i2.util.FunctionBuilder.get_defaults_dict"]], "get_func() (i2.util.functionbuilder method)": [[33, "i2.util.FunctionBuilder.get_func"]], "get_sig_str() (i2.util.functionbuilder method)": [[33, "i2.util.FunctionBuilder.get_sig_str"]], "get_val() (i2.util.literalval method)": [[33, "i2.util.LiteralVal.get_val"]], "i2.util": [[33, "module-i2.util"]], "imdict (class in i2.util)": [[33, "i2.util.imdict"]], "inject_method() (in module i2.util)": [[33, "i2.util.inject_method"]], "insert_name_based_objects_in_scope() (in module i2.util)": [[33, "i2.util.insert_name_based_objects_in_scope"]], "inspect_formatargspec() (in module i2.util)": [[33, "i2.util.inspect_formatargspec"]], "lambda_code() (in module i2.util)": [[33, "i2.util.lambda_code"]], "lazyprop (class in i2.util)": [[33, "i2.util.lazyprop"]], "mk_sentinel() (in module i2.util)": [[33, "i2.util.mk_sentinel"]], "path_extractor() (in module i2.util)": [[33, "i2.util.path_extractor"]], "pop() (i2.util.frozendict method)": [[33, "i2.util.FrozenDict.pop"]], "pop() (i2.util.imdict method)": [[33, "i2.util.imdict.pop"]], "popitem() (i2.util.frozendict method)": [[33, "i2.util.FrozenDict.popitem"]], "popitem() (i2.util.imdict method)": [[33, "i2.util.imdict.popitem"]], "remove_arg() (i2.util.functionbuilder method)": [[33, "i2.util.FunctionBuilder.remove_arg"]], "setdefault() (i2.util.frozendict method)": [[33, "i2.util.FrozenDict.setdefault"]], "setdefault() (i2.util.imdict method)": [[33, "i2.util.imdict.setdefault"]], "update() (i2.util.frozendict method)": [[33, "i2.util.FrozenDict.update"]], "update() (i2.util.imdict method)": [[33, "i2.util.imdict.update"]], "updated() (i2.util.frozendict method)": [[33, "i2.util.FrozenDict.updated"]], "callervalidationerror": [[34, "i2.wrapper.CallerValidationError"]], "egressvalidationerror": [[34, "i2.wrapper.EgressValidationError"]], "ingress (class in i2.wrapper)": [[34, "i2.wrapper.Ingress"]], "ingressvalidationerror": [[34, "i2.wrapper.IngressValidationError"]], "innermapingress (class in i2.wrapper)": [[34, "i2.wrapper.InnerMapIngress"]], "makefromfunc (class in i2.wrapper)": [[34, "i2.wrapper.MakeFromFunc"]], "smartdefault (class in i2.wrapper)": [[34, "i2.wrapper.SmartDefault"]], "wrap (class in i2.wrapper)": [[34, "i2.wrapper.Wrap"]], "wrappervalidationerror": [[34, "i2.wrapper.WrapperValidationError"]], "wrapx (class in i2.wrapper)": [[34, "i2.wrapper.Wrapx"]], "append_empty_args() (in module i2.wrapper)": [[34, "i2.wrapper.append_empty_args"]], "bind_funcs_object_attrs() (in module i2.wrapper)": [[34, "i2.wrapper.bind_funcs_object_attrs"]], "bind_funcs_object_attrs_old() (in module i2.wrapper)": [[34, "i2.wrapper.bind_funcs_object_attrs_old"]], "camelize() (in module i2.wrapper)": [[34, "i2.wrapper.camelize"]], "complete_dict_applying_functions() (in module i2.wrapper)": [[34, "i2.wrapper.complete_dict_applying_functions"]], "from_signature() (i2.wrapper.innermapingress class method)": [[34, "i2.wrapper.InnerMapIngress.from_signature"]], "func_to_method_func() (in module i2.wrapper)": [[34, "i2.wrapper.func_to_method_func"]], "i2.wrapper": [[34, "module-i2.wrapper"]], "identity() (in module i2.wrapper)": [[34, "i2.wrapper.identity"]], "include_exclude_ingress_factory() (in module i2.wrapper)": [[34, "i2.wrapper.include_exclude_ingress_factory"]], "items_with_mapped_keys() (in module i2.wrapper)": [[34, "i2.wrapper.items_with_mapped_keys"]], "kwargs_trans() (in module i2.wrapper)": [[34, "i2.wrapper.kwargs_trans"]], "move_names_to_the_end() (in module i2.wrapper)": [[34, "i2.wrapper.move_names_to_the_end"]], "move_params_to_the_end() (in module i2.wrapper)": [[34, "i2.wrapper.move_params_to_the_end"]], "name_map() (i2.wrapper.ingress class method)": [[34, "i2.wrapper.Ingress.name_map"]], "original_default (i2.wrapper.smartdefault attribute)": [[34, "i2.wrapper.SmartDefault.original_default"]], "partialx() (in module i2.wrapper)": [[34, "i2.wrapper.partialx"]], "transparent_egress() (in module i2.wrapper)": [[34, "i2.wrapper.transparent_egress"]], "transparent_ingress() (in module i2.wrapper)": [[34, "i2.wrapper.transparent_ingress"]], "wrap() (i2.wrapper.ingress method)": [[34, "i2.wrapper.Ingress.wrap"]]}})